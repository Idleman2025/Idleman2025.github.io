{"version":3,"file":"pages-request-form.CjQokdZR.js","sources":["../../../../src/uni_modules/wot-design-uni/components/wd-picker/types.ts","../../../../src/uni_modules/wot-design-uni/components/wd-picker/wd-picker.vue","../../../../src/pages/request/form.vue"],"sourcesContent":["import type { ComponentPublicInstance, ExtractPropTypes, PropType } from 'vue'\nimport { baseProps, makeArrayProp, makeBooleanProp, makeNumberProp, makeStringProp } from '../common/props'\nimport type { ColumnItem, PickerViewColumnChange } from '../wd-picker-view/types'\nimport type { FormItemRule } from '../wd-form/types'\n\nexport const pickerProps = {\n  ...baseProps,\n  /**\n   * label 外部自定义样式\n   */\n  customLabelClass: makeStringProp(''),\n  /**\n   * value 外部自定义样式\n   */\n  customValueClass: makeStringProp(''),\n  /**\n   * pickerView 外部自定义样式\n   */\n  customViewClass: makeStringProp(''),\n  /**\n   * 选择器左侧文案\n   */\n  label: String,\n  /**\n   * 选择器占位符\n   */\n  placeholder: String,\n  /**\n   * 是否禁用\n   */\n  disabled: makeBooleanProp(false),\n  /**\n   * 是否只读\n   */\n  readonly: makeBooleanProp(false),\n  /**\n   * 加载中\n   */\n  loading: makeBooleanProp(false),\n  /**\n   * 加载中颜色\n   */\n  loadingColor: makeStringProp('#4D80F0'),\n  /* popup */\n  /**\n   * 弹出层标题\n   */\n  title: String,\n  /**\n   * 取消按钮文案\n   */\n  cancelButtonText: String,\n  /**\n   * 确认按钮文案\n   */\n  confirmButtonText: String,\n  /**\n   * 是否必填\n   */\n  required: makeBooleanProp(false),\n  /**\n   * 尺寸\n   */\n  size: String,\n  /**\n   * 标签宽度\n   */\n  labelWidth: String,\n  /**\n   * 使用默认插槽\n   */\n  useDefaultSlot: makeBooleanProp(false),\n  /**\n   * 使用标签插槽\n   */\n  useLabelSlot: makeBooleanProp(false),\n  /**\n   * 错误状态\n   */\n  error: makeBooleanProp(false),\n  /**\n   * 右对齐\n   */\n  alignRight: makeBooleanProp(false),\n  /**\n   * 确定前校验函数，接收 (value, resolve, picker) 参数，通过 resolve 继续执行 picker，resolve 接收1个boolean参数\n   */\n  beforeConfirm: Function as PropType<PickerBeforeConfirm>,\n  /**\n   * 点击蒙层关闭\n   */\n  closeOnClickModal: makeBooleanProp(true),\n  /**\n   * 底部安全区域内\n   */\n  safeAreaInsetBottom: makeBooleanProp(true),\n  /**\n   * 文本溢出显示省略号\n   */\n  ellipsis: makeBooleanProp(false),\n  /**\n   * 选项总高度\n   */\n  columnsHeight: makeNumberProp(217),\n  /**\n   * 选项值对应的键名\n   */\n  valueKey: makeStringProp('value'),\n  /**\n   * 选项文本对应的键名\n   */\n  labelKey: makeStringProp('label'),\n  /**\n   * 选中项，如果为多列选择器，则其类型应为数组\n   */\n  modelValue: {\n    type: [String, Number, Array] as PropType<string | number | Array<string> | Array<number>>,\n    default: ''\n  },\n  /**\n   * 选择器数据，可以为字符串数组，也可以为对象数组，如果为二维数组，则为多列选择器\n   */\n  columns: {\n    type: Array as PropType<Array<string | number | ColumnItem | Array<string | number | ColumnItem>>>,\n    default: () => []\n  },\n  /**\n   * 接收 pickerView 实例、选中项、当前修改列的下标、resolve 作为入参，根据选中项和列下标进行判断，通过 pickerView 实例暴露出来的 setColumnData 方法修改其他列的数据源。\n   */\n  columnChange: Function as PropType<PickerViewColumnChange>,\n  /**\n   * 自定义展示文案的格式化函数，返回一个字符串\n   */\n  displayFormat: Function as PropType<PickerDisplayFormat>,\n  /**\n   * 自定义层级\n   */\n  zIndex: makeNumberProp(15),\n  /**\n   * 表单域 model 字段名，在使用表单校验功能的情况下，该属性是必填的\n   */\n  prop: String,\n  /**\n   * 表单验证规则，结合wd-form组件使用\n   */\n  rules: makeArrayProp<FormItemRule>(),\n  /**\n   * 是否在手指松开时立即触发 change 事件。若不开启则会在滚动动画结束后触发 change 事件，1.2.25版本起提供，仅微信小程序和支付宝小程序支持。\n   */\n  immediateChange: makeBooleanProp(false),\n  /**\n   * 显示清空按钮\n   */\n  clearable: makeBooleanProp(false)\n}\n\nexport type PickerProps = ExtractPropTypes<typeof pickerProps>\n\nexport type PickerDisplayFormat = (item: ColumnItem | ColumnItem[], vl: { valueKey: string; labelKey: string }) => string\n\nexport type PickerBeforeConfirm = (\n  value: string | number | boolean | string[] | number[] | boolean[],\n  resolve: (isPass: boolean) => void,\n  picker: any\n) => void\n\nexport type PickerExpose = {\n  // 打开picker弹框\n  open: () => void\n  // 关闭picker弹框\n  close: () => void\n  /**\n   * 设置加载状态\n   * @param loading 加载状态\n   */\n  setLoading: (loading: boolean) => void\n}\n\nexport type PickerInstance = ComponentPublicInstance<PickerExpose, PickerProps>\n","<template>\n  <view\n    :class=\"`wd-picker ${disabled ? 'is-disabled' : ''} ${size ? 'is-' + size : ''}  ${cell.border.value ? 'is-border' : ''} ${\n      alignRight ? 'is-align-right' : ''\n    } ${error ? 'is-error' : ''} ${customClass}`\"\n    :style=\"customStyle\"\n  >\n    <view class=\"wd-picker__field\" @click=\"showPopup\">\n      <slot v-if=\"useDefaultSlot\"></slot>\n      <view v-else class=\"wd-picker__cell\">\n        <view\n          v-if=\"label || useLabelSlot\"\n          :class=\"`wd-picker__label ${customLabelClass}  ${isRequired ? 'is-required' : ''}`\"\n          :style=\"labelWidth ? 'min-width:' + labelWidth + ';max-width:' + labelWidth + ';' : ''\"\n        >\n          <template v-if=\"label\">{{ label }}</template>\n          <slot v-else name=\"label\"></slot>\n        </view>\n        <view class=\"wd-picker__body\">\n          <view class=\"wd-picker__value-wraper\">\n            <view :class=\"`wd-picker__value ${ellipsis && 'is-ellipsis'} ${customValueClass} ${showValue ? '' : 'wd-picker__placeholder'}`\">\n              {{ showValue ? showValue : placeholder || translate('placeholder') }}\n            </view>\n            <wd-icon v-if=\"showArrow\" custom-class=\"wd-picker__arrow\" name=\"arrow-right\" />\n            <view v-else-if=\"showClear\" @click.stop=\"handleClear\">\n              <wd-icon custom-class=\"wd-picker__clear\" name=\"error-fill\" />\n            </view>\n          </view>\n          <view v-if=\"errorMessage\" class=\"wd-picker__error-message\">{{ errorMessage }}</view>\n        </view>\n      </view>\n    </view>\n    <wd-popup\n      v-model=\"popupShow\"\n      position=\"bottom\"\n      :hide-when-close=\"false\"\n      :close-on-click-modal=\"closeOnClickModal\"\n      :z-index=\"zIndex\"\n      :safe-area-inset-bottom=\"safeAreaInsetBottom\"\n      @close=\"onCancel\"\n      custom-class=\"wd-picker__popup\"\n    >\n      <view class=\"wd-picker__wraper\">\n        <view class=\"wd-picker__toolbar\" @touchmove=\"noop\">\n          <view class=\"wd-picker__action wd-picker__action--cancel\" @click=\"onCancel\">\n            {{ cancelButtonText || translate('cancel') }}\n          </view>\n          <view v-if=\"title\" class=\"wd-picker__title\">{{ title }}</view>\n          <view :class=\"`wd-picker__action ${isLoading ? 'is-loading' : ''}`\" @click=\"onConfirm\">\n            {{ confirmButtonText || translate('done') }}\n          </view>\n        </view>\n        <wd-picker-view\n          ref=\"pickerViewWd\"\n          :custom-class=\"customViewClass\"\n          v-model=\"pickerValue\"\n          :columns=\"displayColumns\"\n          :loading=\"isLoading\"\n          :loading-color=\"loadingColor\"\n          :columns-height=\"columnsHeight\"\n          :value-key=\"valueKey\"\n          :label-key=\"labelKey\"\n          :immediate-change=\"immediateChange\"\n          @change=\"pickerViewChange\"\n          @pickstart=\"onPickStart\"\n          @pickend=\"onPickEnd\"\n          :column-change=\"columnChange\"\n        />\n      </view>\n    </wd-popup>\n  </view>\n</template>\n\n<script lang=\"ts\">\nexport default {\n  name: 'wd-picker',\n  options: {\n    virtualHost: true,\n    addGlobalClass: true,\n    styleIsolation: 'shared'\n  }\n}\n</script>\n\n<script lang=\"ts\" setup>\nimport wdIcon from '../wd-icon/wd-icon.vue'\nimport wdPopup from '../wd-popup/wd-popup.vue'\nimport wdPickerView from '../wd-picker-view/wd-picker-view.vue'\nimport { getCurrentInstance, onBeforeMount, ref, watch, computed, onMounted, nextTick } from 'vue'\nimport { deepClone, defaultDisplayFormat, getType, isArray, isDef, isFunction } from '../common/util'\nimport { useCell } from '../composables/useCell'\nimport { type ColumnItem, formatArray, type PickerViewInstance } from '../wd-picker-view/types'\nimport { FORM_KEY, type FormItemRule } from '../wd-form/types'\nimport { useParent } from '../composables/useParent'\nimport { useTranslate } from '../composables/useTranslate'\nimport { pickerProps, type PickerExpose } from './types'\nconst { translate } = useTranslate('picker')\n\nconst props = defineProps(pickerProps)\nconst emit = defineEmits(['confirm', 'open', 'cancel', 'clear', 'update:modelValue'])\n\nconst pickerViewWd = ref<PickerViewInstance | null>(null)\nconst cell = useCell()\n\nconst innerLoading = ref<boolean>(false) // 内部控制是否loading\n\n// 弹出层是否显示\nconst popupShow = ref<boolean>(false)\n// 选定后展示的选中项\nconst showValue = ref<string>('')\nconst pickerValue = ref<string | number | boolean | string[] | number[] | boolean[]>('')\nconst displayColumns = ref<Array<string | number | ColumnItem | Array<string | number | ColumnItem>>>([]) // 传入 pickerView 的columns\nconst resetColumns = ref<Array<string | number | ColumnItem | Array<string | number | ColumnItem>>>([]) // 保存之前的 columns，当取消时，将数据源回滚，避免多级联动数据源不正确的情况\nconst isPicking = ref<boolean>(false) // 判断pickview是否还在滑动中\nconst hasConfirmed = ref<boolean>(false) // 判断用户是否点击了确认按钮\n\nconst isLoading = computed(() => {\n  return props.loading || innerLoading.value\n})\n\nwatch(\n  () => props.displayFormat,\n  (fn) => {\n    if (fn && !isFunction(fn)) {\n      console.error('The type of displayFormat must be Function')\n    }\n    if (pickerViewWd.value && pickerViewWd.value.getSelectedIndex().length !== 0) {\n      handleShowValueUpdate(props.modelValue)\n    }\n  },\n  {\n    immediate: true,\n    deep: true\n  }\n)\n\nwatch(\n  () => props.modelValue,\n  (newValue) => {\n    pickerValue.value = newValue\n    // 获取初始选中项,并展示初始选中文案\n    handleShowValueUpdate(newValue)\n  },\n  {\n    deep: true,\n    immediate: true\n  }\n)\n\nwatch(\n  () => props.columns,\n  (newValue) => {\n    displayColumns.value = deepClone(newValue)\n    resetColumns.value = deepClone(newValue)\n    if (newValue.length === 0) {\n      // 当 columns 变为空时，清空 pickerValue 和 showValue\n      pickerValue.value = isArray(props.modelValue) ? [] : ''\n      showValue.value = ''\n    } else {\n      // 非空时正常更新显示值\n      handleShowValueUpdate(props.modelValue)\n    }\n  },\n  {\n    deep: true,\n    immediate: true\n  }\n)\n\nwatch(\n  () => props.columnChange,\n  (newValue) => {\n    if (newValue && !isFunction(newValue)) {\n      console.error('The type of columnChange must be Function')\n    }\n  },\n  {\n    deep: true,\n    immediate: true\n  }\n)\n\nconst { parent: form } = useParent(FORM_KEY)\n\n// 表单校验错误信息\nconst errorMessage = computed(() => {\n  if (form && props.prop && form.errorMessages && form.errorMessages[props.prop]) {\n    return form.errorMessages[props.prop]\n  } else {\n    return ''\n  }\n})\n\n// 是否展示必填\nconst isRequired = computed(() => {\n  let formRequired = false\n  if (form && form.props.rules) {\n    const rules = form.props.rules\n    for (const key in rules) {\n      if (Object.prototype.hasOwnProperty.call(rules, key) && key === props.prop && Array.isArray(rules[key])) {\n        formRequired = rules[key].some((rule: FormItemRule) => rule.required)\n      }\n    }\n  }\n  return props.required || props.rules.some((rule) => rule.required) || formRequired\n})\n\nconst { proxy } = getCurrentInstance() as any\n\nonMounted(() => {\n  handleShowValueUpdate(props.modelValue)\n})\n\nonBeforeMount(() => {\n  displayColumns.value = deepClone(props.columns)\n  resetColumns.value = deepClone(props.columns)\n})\n\n/**\n * 值变更时更新显示内容\n * @param value\n */\nfunction handleShowValueUpdate(value: string | number | Array<string | number>) {\n  // 获取初始选中项,并展示初始选中文案\n  if ((isArray(value) && value.length > 0) || (isDef(value) && !isArray(value) && value !== '')) {\n    if (pickerViewWd.value) {\n      nextTick(() => {\n        setShowValue(pickerViewWd.value!.getSelects())\n      })\n    } else {\n      setShowValue(getSelects(value)!)\n    }\n  } else {\n    showValue.value = ''\n  }\n}\n\n/**\n * @description 根据传入的value，picker组件获取当前cell展示值。\n * @param {String|Number|Array<String|Number|Array<any>>}value\n */\nfunction getSelects(value: string | number | Array<string | number | Array<any>>) {\n  const formatColumns = formatArray(props.columns, props.valueKey, props.labelKey)\n  if (props.columns.length === 0) return\n\n  // 使其默认选中首项\n  if (value === '' || !isDef(value) || (isArray(value) && value.length === 0)) {\n    return\n  }\n  const valueType = getType(value)\n  const type = ['string', 'number', 'boolean', 'array']\n  if (type.indexOf(valueType) === -1) return []\n  /**\n   * 1.单key转为Array<key>\n   * 2.根据formatColumns的长度截取Array<String>，保证下面的遍历不溢出\n   * 3.根据每列的key值找到选项中value为此key的下标并记录\n   */\n  value = isArray(value) ? value : [value]\n  value = value.slice(0, formatColumns.length)\n\n  if (value.length === 0) {\n    value = formatColumns.map(() => 0)\n  }\n  let selected: number[] = []\n  value.forEach((target, col) => {\n    let row = formatColumns[col].findIndex((row) => {\n      return row[props.valueKey].toString() === target.toString()\n    })\n    row = row === -1 ? 0 : row\n    selected.push(row)\n  })\n\n  const selects = selected.map((row, col) => formatColumns[col][row])\n  // 单列选择器，则返回单项\n  if (selects.length === 1) {\n    return selects[0]\n  }\n  return selects\n}\n\n// 对外暴露方法，打开弹框\nfunction open() {\n  showPopup()\n}\n// 对外暴露方法，关闭弹框\nfunction close() {\n  onCancel()\n}\n/**\n * 展示popup\n */\nfunction showPopup() {\n  if (props.disabled || props.readonly) return\n\n  emit('open')\n  popupShow.value = true\n  pickerValue.value = props.modelValue\n  displayColumns.value = resetColumns.value\n}\n\n/**\n * 点击取消按钮触发。关闭popup，触发cancel事件。\n */\nfunction onCancel() {\n  popupShow.value = false\n  emit('cancel')\n  let timmer = setTimeout(() => {\n    clearTimeout(timmer)\n    isDef(pickerViewWd.value) && pickerViewWd.value.resetColumns(resetColumns.value)\n  }, 300)\n}\n/**\n * 点击确定按钮触发。展示选中值，触发cancel事件。\n */\nfunction onConfirm() {\n  if (isLoading.value) return\n\n  // 如果当前还在滑动且未停止下来，则锁住先不确认，等滑完再自动确认，避免pickview值未更新\n  if (isPicking.value) {\n    hasConfirmed.value = true\n    return\n  }\n\n  const { beforeConfirm } = props\n  if (beforeConfirm && isFunction(beforeConfirm)) {\n    beforeConfirm(\n      pickerValue.value,\n      (isPass: boolean) => {\n        isPass && handleConfirm()\n      },\n      proxy.$.exposed\n    )\n  } else {\n    handleConfirm()\n  }\n}\nfunction handleConfirm() {\n  if (isLoading.value || props.disabled) {\n    popupShow.value = false\n    return\n  }\n\n  const selects = pickerViewWd.value!.getSelects()\n  const values = pickerViewWd.value!.getValues()\n  // 获取当前的数据源，并设置给 resetColumns，用于取消时可以回退数据源\n  const columns = pickerViewWd.value!.getColumnsData()\n  popupShow.value = false\n  resetColumns.value = deepClone(columns)\n  emit('update:modelValue', values)\n\n  setShowValue(selects)\n  emit('confirm', {\n    value: values,\n    selectedItems: selects\n  })\n}\n/**\n * 初始change事件\n * @param event\n */\nfunction pickerViewChange({ value }: any) {\n  pickerValue.value = value\n}\n/**\n * 设置展示值\n * @param  items\n */\nfunction setShowValue(items: ColumnItem | ColumnItem[]) {\n  // 避免值为空时调用自定义展示函数\n  if ((isArray(items) && !items.length) || !items) return\n\n  const { valueKey, labelKey } = props\n  showValue.value = (props.displayFormat || defaultDisplayFormat)(items, { valueKey, labelKey })\n}\nfunction noop() {}\nfunction onPickStart() {\n  isPicking.value = true\n}\nfunction onPickEnd() {\n  isPicking.value = false\n\n  if (hasConfirmed.value) {\n    hasConfirmed.value = false\n    onConfirm()\n  }\n}\n\n/**\n * 外部设置是否loading\n * @param loading 是否loading\n */\nfunction setLoading(loading: boolean) {\n  innerLoading.value = loading\n}\n\n// 是否展示清除按钮\nconst showClear = computed(() => {\n  return props.clearable && !props.disabled && !props.readonly && showValue.value.length\n})\n\nfunction handleClear() {\n  const clearValue = isArray(pickerValue.value) ? [] : ''\n  emit('update:modelValue', clearValue)\n  emit('clear')\n}\n\n// 是否展示箭头\nconst showArrow = computed(() => {\n  return !props.disabled && !props.readonly && !showClear.value\n})\n\ndefineExpose<PickerExpose>({\n  close,\n  open,\n  setLoading\n})\n</script>\n<style lang=\"scss\" scoped>\n@import './index.scss';\n</style>\n","<template>\n  <view class=\"container\">\n    <view class=\"content\">\n      <!-- ==================== 标题区域 ==================== -->\n      <view class=\"title\">\n        <wd-icon\n          name=\"thin-arrow-left\"\n          size=\"18px\"\n          @click=\"handleClickBack\"\n        ></wd-icon>\n        <text class=\"ml-5\">\n          {{\n            formData.submitType == 1 || formData.submitType == 3\n              ? \"Offer Details\"\n              : \"Request Details\"\n          }}\n        </text>\n      </view>\n      <!-- ==================== 表单区域 ==================== -->\n      <view class=\"my_form\" v-if=\"showFrom\">\n        <wd-form ref=\"form\" :model=\"formData\">\n          <!-- ------------------ 灯泡文字，智能推荐 ------------------ -->\n          <view\n            style=\"\n              font-size: 10px;\n              font-weight: normal;\n              line-height: normal;\n              letter-spacing: normal;\n              text-decoration: underline;\n              color: #949399;\n              text-align: right;\n              margin-bottom: 14px;\n            \"\n          >\n            <wd-icon name=\"tips\" size=\"14px\"></wd-icon>\n            Smart Recommendation\n          </view>\n\n          <view class=\"c-custom-from-item\">\n            <view class=\"c-custom-from-item-label\"> Type</view>\n            <view class=\"c-custom-from-item-value\">\n              <input\n                class=\"c-custom-input\"\n                :disabled=\"true\"\n                v-model=\"formData.type\"\n              />\n            </view>\n          </view>\n\n          <view class=\"c-custom-from-item\" v-if=\"formData?.submitType == 1\">\n            <view class=\"c-custom-from-item-label\"> Offerings Title</view>\n            <view class=\"c-custom-from-item-value\">\n              <input class=\"c-custom-input\" v-model=\"formData.title\" />\n            </view>\n          </view>\n\n          <view class=\"c-custom-from-item\" v-if=\"formData?.submitType == 2\">\n            <view class=\"c-custom-from-item-label\"> Request Title</view>\n            <view class=\"c-custom-from-item-value\">\n              <input class=\"c-custom-input\" v-model=\"formData.title\" />\n            </view>\n          </view>\n          <template v-if=\"formData.renderType == 1 || formData.renderType == 3\">\n            <!--From地址选择-->\n            <view class=\"c-custom-from-item\">\n              <view class=\"c-custom-from-item-label\"> From</view>\n              <view\n                class=\"c-custom-from-item-value flex items-center\"\n                @click.stop.prevent=\"showFromAddressPopup = true\"\n              >\n                <view class=\"c-custom-input w-full\" style=\"font-size: 26rpx\">\n                  {{ formData.fromText }}\n                </view>\n                <image\n                  class=\"from-icon\"\n                  src=\"@/static/chooseOffering/downArrow.svg\"\n                  mode=\"widthFix\"\n                />\n              </view>\n            </view>\n\n            <view class=\"c-custom-from-item\">\n              <view class=\"c-custom-from-item-label\"> To</view>\n              <view\n                class=\"c-custom-from-item-value flex items-center\"\n                @click.stop.prevent=\"showToAddressPopup = true\"\n              >\n                <view class=\"c-custom-input w-full\" style=\"font-size: 26rpx\">\n                  {{ formData.toText }}\n                </view>\n                <image\n                  class=\"from-icon\"\n                  src=\"@/static/chooseOffering/downArrow.svg\"\n                  mode=\"widthFix\"\n                />\n              </view>\n            </view>\n\n            <view class=\"c-custom-from-item\">\n              <view class=\"c-custom-from-item-label\"> Date & Time</view>\n              <view\n                class=\"c-custom-from-item-value flex items-center\"\n                @click.stop.prevent=\"showFromTimePopup = true\"\n              >\n                <view class=\"c-custom-input w-full\">\n                  {{ formData.dateText }}\n                </view>\n                <image\n                  class=\"from-icon\"\n                  src=\"@/static/chooseOffering/downArrow.svg\"\n                  mode=\"widthFix\"\n                />\n              </view>\n            </view>\n          </template>\n          <wd-picker\n            v-if=\"formData.renderType == 2 || formData.renderType == 4\"\n            v-model=\"formData.condition\"\n            use-default-slot\n            :columns=\"conditionList\"\n            label-key=\"name\"\n            value-key=\"id\"\n          >\n            <view class=\"c-custom-from-item\">\n              <view class=\"c-custom-from-item-label\"> Condition</view>\n              <view class=\"c-custom-from-item-value flex items-center\">\n                <view class=\"c-custom-input w-full\">\n                  {{ currentConditionText }}\n                </view>\n                <image\n                  class=\"from-icon\"\n                  src=\"@/static/chooseOffering/downArrow.svg\"\n                  mode=\"widthFix\"\n                />\n              </view>\n            </view>\n          </wd-picker>\n\n          <view class=\"c-custom-from-item\">\n            <view class=\"c-custom-from-item-label\"> Description</view>\n            <view class=\"c-custom-from-item-value\" style=\"border-radius: 24rpx\">\n              <textarea\n                class=\"c-custom-input-textarea\"\n                :maxlength=\"-1\"\n                v-model=\"formData.description\"\n              />\n              <view\n                class=\"select-image-icon\"\n                @click=\"handleClickSelectPictures\"\n              >\n                <image\n                  src=\"@/static/chooseOffering/offering_selectPictures.png\"\n                  mode=\"widthFix\"\n                />\n              </view>\n              <view class=\"upload-image-list flex items-center flex-wrap\">\n                <image\n                  v-for=\"(image, index) in formData.imagesRender\"\n                  :key=\"index\"\n                  :src=\"image\"\n                  style=\"\n                    width: 100rpx;\n                    height: 100rpx;\n                    border-radius: 20rpx;\n                    margin: 10rpx;\n                  \"\n                />\n              </view>\n            </view>\n          </view>\n\n          <view class=\"c-custom-from-item\">\n            <view class=\"c-custom-from-item-label\"> Offering Price</view>\n            <view class=\"c-custom-from-item-value flex items-center\">\n              <view class=\"money-icon\">$</view>\n              <input class=\"c-custom-input\" v-model=\"formData.price\" type=\"number\"/>\n            </view>\n          </view>\n          <view\n            class=\"c-custom-from-item flex items-center w-full justify-center\"\n          >\n            <button\n              :class=\"{\n                'offer-button': formData.submitType == 2,\n                'request-button': formData.submitType == 1,\n                'disabled-button': !isFormComplete,\n              }\"\n              :disabled=\"!isFormComplete\"\n              style=\"color: #ffffff\"\n              @click=\"handleConfirm\"\n            >\n              {{\n                formData.submitType == 1\n                  ? \" LIST MY OFFERING\"\n                  : \"LIST MY REQUEST\"\n              }}\n            </button>\n          </view>\n        </wd-form>\n      </view>\n      <!--隐私协议区域-->\n      <view class=\"police-rule\" v-else>\n        <!--TODO 后续对接接口-->\n        <!--<rich-text :nodes=\"richTextContent\" v-if=\"agreeSetup == 0\" />-->\n        <!-- ------------------ 白色logo ------------------ -->\n        <template v-if=\"agreeSetup == 0\">\n          <view class=\"main_logo\">\n            <image\n              style=\"width: 200rpx; height: 200rpx; margin-bottom: 100rpx\"\n              src=\"@/static/rules/logo.jpg\"\n              mode=\"widthFix\"\n            />\n          </view>\n          <!-- ------------------ 文字内容 ------------------ -->\n          <view\n            style=\"\n              color: #979797;\n              font-weight: bold;\n              font-size: 32rpx;\n              text-align: center;\n            \"\n          >\n            Before using the service, you care minded you\n            <text style=\"color: red\">must comply</text>\n            with the ldleMan\n            <text style=\"text-decoration: underline\">Terms and Conditions</text>\n            ，Hong Kong Ordinances and Regulations.\n            <br /><br />\n            You\n            <text style=\"color: red\">must not</text>\n            perform unlawful activities in ldleMan service. <br />\n            <br />\n            ldleMan is not liable for your unlawful act. <br />\n            <br />\n          </view>\n        </template>\n        <view\n          style=\"text-align: center; margin-top: 20rpx\"\n          v-if=\"agreeSetup == 1\"\n        >\n          You have successfully submitted your listing!\n        </view>\n        <button\n          class=\"agree-button\"\n          :class=\"{\n            'offer-button': formData.submitType == 2,\n            'request-button': formData.submitType == 1,\n          }\"\n          @click=\"handleSubmit\"\n        >\n          {{ agreeSetup == 0 ? \"AGREE\" : \"Back\" }}\n        </button>\n\n        <button\n          v-if=\"agreeSetup == 0\"\n          class=\"agree-button\"\n          :class=\"{\n            'offer-button': formData.submitType == 2,\n            'request-button': formData.submitType == 1,\n          }\"\n          @click=\"handleBackForm\"\n        >\n          Back\n        </button>\n      </view>\n    </view>\n  </view>\n  <!--From地址选择-->\n  <wd-popup\n    v-model=\"showFromAddressPopup\"\n    position=\"bottom\"\n    custom-style=\"border-radius: 32rpx 32rpx 0 0\"\n  >\n    <view class=\"popup-header flex items-center justify-between p-3\">\n      <view @click=\"showFromAddressPopup = false\">Cancel</view>\n      <view class=\"color-[#235597]\" @click=\"handleConfirmFromAddress\">\n        Complete\n      </view>\n    </view>\n    <wd-picker-view\n      :columns=\"addressList\"\n      v-model=\"formData.from\"\n      :column-change=\"onChangeDistrict\"\n    />\n  </wd-popup>\n  <!--To地址选择-->\n  <wd-popup\n    v-model=\"showToAddressPopup\"\n    position=\"bottom\"\n    custom-style=\"border-radius: 32rpx 32rpx 0 0\"\n  >\n    <view class=\"popup-header flex items-center justify-between p-3\">\n      <view @click=\"showToAddressPopup = false\">Cancel</view>\n      <view class=\"color-[#235597]\" @click=\"handleConfirmToAddress\">\n        Complete\n      </view>\n    </view>\n    <wd-picker-view\n      :columns=\"addressList\"\n      v-model=\"formData.to\"\n      :column-change=\"onChangeDistrict\"\n    />\n  </wd-popup>\n  <!--时间选择-->\n  <wd-popup\n    v-model=\"showFromTimePopup\"\n    position=\"bottom\"\n    custom-style=\"border-radius: 32rpx 32rpx 0 0\"\n  >\n    <view class=\"popup-header flex items-center justify-between p-3\">\n      <view @click=\"showFromTimePopup = false\">Cancel</view>\n      <view class=\"color-[#235597]\" @click=\"handleConfirmDateTime\">\n        Complete\n      </view>\n    </view>\n    <wd-datetime-picker-view\n      v-model=\"formData.datetime\"\n      :minDate=\"currentDate\"\n      type=\"date\"\n    />\n  </wd-popup>\n  <CustomTabbar />\n</template>\n\n<script setup>\nimport { ref, reactive, computed } from \"vue\"\nimport moment from \"moment\"\nimport { indexGetRichtext, indexPostService } from \"@/api/totalApi\"\nimport CustomTabbar from \"@/components/CustomTabbar.vue\"\n\nconst FILE_UPLOAD_URL = import.meta.env.VITE_UPLOAD_BASEURL\n// 表单数据\nconst formData = reactive({\n  renderType: 1,\n  submitType: 1,\n  methodtype: 1,\n  cate_id: 0,\n  type: undefined,\n  condition: undefined,\n  title: undefined,\n  description: undefined,\n  price: undefined,\n  images: [],\n  imagesRender: [],\n  from: undefined,\n  to: undefined,\n  datetime: new Date().getTime(),\n  fromText: undefined,\n  toText: undefined,\n  dateText: undefined,\n  // TODO 数量暂时不要\n  //quantity: undefined,\n})\n\nconst conditionList = ref([])\n\nconst showFrom = ref(true)\nconst richTextContent = ref(\"\")\nconst agreeSetup = ref(0)\n\nconst showFromAddressPopup = ref(false)\nconst showToAddressPopup = ref(false)\nconst showFromTimePopup = ref(false)\n\nconst hkDistrict = {\n  // 第一级：香港主要区域\n  root: [\n    { label: \"Hong Kong Island\", value: \"Hong Kong Island\" },\n    { label: \"Kowloon\", value: \"Kowloon\" },\n    { label: \"New Territories\", value: \"New Territories\" },\n    { label: \"Outlying Islands\", value: \"Outlying Islands\" },\n  ],\n  // 香港岛地区\n  \"Hong Kong Island\": [\n    { label: \"Central and Western\", value: \"Central and Western\" },\n    { label: \"Eastern\", value: \"Eastern\" },\n    { label: \"Southern\", value: \"Southern\" },\n    { label: \"Wan Chai\", value: \"Wan Chai\" },\n  ],\n  // 九龙地区\n  Kowloon: [\n    { label: \"Kowloon City\", value: \"Kowloon City\" },\n    { label: \"Kwun Tong\", value: \"Kwun Tong\" },\n    { label: \"Sham Shui Po\", value: \"Sham Shui Po\" },\n    { label: \"Wong Tai Sin\", value: \"Wong Tai Sin\" },\n    { label: \"Yau Tsim Mong\", value: \"Yau Tsim Mong\" },\n  ],\n  // 新界地区\n  \"New Territories\": [\n    { label: \"Kwai Tsing\", value: \"Kwai Tsing\" },\n    { label: \"North\", value: \"North\" },\n    { label: \"Sai Kung\", value: \"Sai Kung\" },\n    { label: \"Sha Tin\", value: \"Sha Tin\" },\n    { label: \"Tai Po\", value: \"Tai Po\" },\n    { label: \"Tsuen Wan\", value: \"Tsuen Wan\" },\n    { label: \"Tuen Mun\", value: \"Tuen Mun\" },\n    { label: \"Yuen Long\", value: \"Yuen Long\" },\n  ],\n  \"Outlying Islands\": [{ label: \"Islands\", value: \"Islands\" }],\n}\n\nconst addressList = ref([hkDistrict[\"root\"], hkDistrict[\"Hong Kong Island\"]])\n\nconst onChangeDistrict = (pickerView, value, columnIndex, resolve) => {\n  const item = value[columnIndex]\n\n  if (columnIndex === 0) {\n    // 选择了区域（第一列），更新第二列数据\n    pickerView.setColumnData(1, hkDistrict[item.value])\n  }\n  resolve()\n}\n\nconst currentDate = ref(new Date().getTime())\n\nconst handleConfirm = () => {\n  showFrom.value = false\n}\n\n/**\n * 提交后返回的 id\n * @type {Ref<String | Number>}\n */\nconst postId = ref()\n\nconst handleSubmit = async () => {\n  if (agreeSetup.value == 1) {\n    //if (!postId.value) {\n    //  useToast(\"System error. Please try again\")\n    //  showFrom.value = true\n    //  agreeSetup.value = 0\n    //  return\n    //}\n    //await useRedirectTo(\"/pages/myorder/index\", {id: postId.value})\n    await useRedirectTo(\"/pages/myorder/index\", {\n      type: formData.submitType,\n    })\n    return\n  }\n\n  // 合并\n  const params = {\n    methodtype: formData.submitType,\n    cate_id: formData.cate_id,\n    condition: formData.condition,\n    title: formData.title,\n    description: formData.description,\n    price: formData.price,\n    images: formData.images.join(\",\"),\n    quantity: \"\",\n  }\n\n  // 服务\n  if (formData.renderType == 1 || formData.renderType == 3) {\n    params.from = formData.fromText\n    params.to = formData.toText\n    params.datetime = formData.dateText\n    const r = await indexPostService(params)\n\n    if (r.code == 200) {\n      agreeSetup.value = agreeSetup.value + 1\n      postId.value = r.data.id\n    }\n  }\n  // 商品\n  else if (formData.renderType == 2 || formData.renderType == 4) {\n    const r = await indexPostGoods(params)\n    if (r.code == 200) {\n      agreeSetup.value = agreeSetup.value + 1\n      postId.value = r.data.id\n    }\n  }\n}\n\nconst currentConditionText = computed(() => {\n  return conditionList.value.find((item) => item.id == formData.condition)?.name\n})\n\nconst handleBackForm = () => {\n  showFrom.value = true\n  agreeSetup.value = 0\n}\n\nconst handleClickBack = () => {\n  if (agreeSetup.value == 1) {\n    useRedirectTo(\"/pages/myorder/index\", {\n      type: formData.submitType,\n    })\n  } else if (showFrom.value == false) {\n    handleBackForm()\n  } else {\n    uni.navigateBack()\n  }\n}\n\n// ============================================== 页面数据加载 ==============================================\nonLoad(async (options) => {\n  // 确认表单类型\n  formData.renderType = options.method\n  formData.submitType = options.type\n\n  // 确认分类 type\n  formData.cate_id = options.category\n  formData.type = decodeURIComponent(options.categoryName)\n\n  // 获取富文本\n  const richtext = await indexGetRichtext({ type: 4 })\n  richTextContent.value = richtext.data.content\n\n  const conditionResult = await indexCondition()\n  conditionList.value = conditionResult.data\n})\n\nconst handleClickSelectPictures = () => {\n  uni.chooseImage({\n    count: 1,\n    sizeType: [\"original\", \"compressed\"],\n    sourceType: [\"album\", \"camera\"],\n    success: (res) => {\n      uni.uploadFile({\n        url: FILE_UPLOAD_URL,\n        filePath: res.tempFilePaths[0],\n        name: \"file\",\n        success: (res) => {\n          console.log(\"上传结果: \", res)\n          const result = JSON.parse(res.data)\n\n          if (result.code != 200) {\n            useToast(\"File upload failed.\")\n            return\n          }\n          const { url, fullurl } = result.data\n          formData.images.push(url)\n          formData.imagesRender.push(fullurl)\n        },\n      })\n    },\n  })\n}\n\nconst handleConfirmFromAddress = () => {\n  console.log(formData.from)\n\n  if (!formData.from) {\n    formData.from = [\"Hong Kong Island\", \"Central and Western\"]\n  }\n\n  formData.fromText = formData.from.join(\" \")\n  showFromAddressPopup.value = false\n}\nconst handleConfirmToAddress = () => {\n  if (!formData.to) {\n    formData.to = [\"Hong Kong Island\", \"Central and Western\"]\n  }\n  formData.toText = formData.to?.join(\" \")\n  showToAddressPopup.value = false\n}\n\nconst handleConfirmDateTime = () => {\n  formData.dateText = moment(formData.datetime).format(\"YYYY-MM-DD\")\n  showFromTimePopup.value = false\n}\n\nconst isFormComplete = computed(() => {\n  // 基础必填项\n  const baseFields = [formData.title, formData.description, formData.price]\n  // 根据 renderType 补充必填项\n  if (formData.renderType == 1 || formData.renderType == 3) {\n    baseFields.push(formData.fromText, formData.toText, formData.dateText)\n  } else if (formData.renderType == 2 || formData.renderType == 4) {\n    baseFields.push(formData.condition)\n  }\n  return baseFields.every((v) => v !== undefined && v !== null && v !== \"\")\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  width: 100%;\n  min-height: 100vh;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.content {\n  width: 100%;\n  min-height: 100vh;\n  padding-bottom: 100px;\n  box-sizing: border-box;\n  background-color: #f4f6fe;\n}\n\n/* ------------------------ 标题区域 ----------------------- */\n.title {\n  width: 100%;\n  height: 200px;\n  padding: 20px;\n  box-sizing: border-box;\n\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n\n  background-color: #235597;\n  font-size: 20px;\n  font-weight: 900;\n  line-height: normal;\n  letter-spacing: 0px;\n  font-feature-settings: \"kern\" on;\n  color: #ffffff;\n}\n\n/* ---------------- 四个选项的通用代码 ---------------------*/\n.my_form {\n  width: 100%;\n  height: auto;\n\n  padding: 44rpx;\n  box-sizing: border-box;\n\n  margin-bottom: 10px;\n\n  .custom_WotCellGroud {\n    border-radius: 10px;\n    overflow: hidden;\n    box-shadow: 1px 1px 1px 1px rgba(126, 126, 126, 0.25);\n    margin-bottom: 10px;\n    font-size: 18px;\n    font-weight: 600;\n    line-height: normal;\n    letter-spacing: normal;\n    color: #3d3d3d;\n  }\n\n  .custom_WotCellTitleFont {\n    font-size: 18px;\n    font-weight: 500;\n    line-height: normal;\n    letter-spacing: normal;\n    color: #3d3d3d;\n  }\n\n  .custom_WotDropMenu,\n  .custom_WotDropMenuItem,\n  .custom_WotDropMenuPopup {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: normal;\n    letter-spacing: normal;\n    color: #3d3d3d;\n  }\n\n  .custom_WotDropMenuPopup {\n    margin: 14px;\n    box-sizing: border-box;\n    background-color: transparent;\n  }\n}\n\n.c-custom-from-item {\n  margin-bottom: 40rpx;\n\n  .from-icon {\n    width: 32rpx;\n    height: 32rpx;\n  }\n\n  .c-custom-from-item-label {\n    font-size: 32rpx;\n    font-weight: bold;\n    color: #3d3d3d;\n  }\n\n  .c-custom-from-item-value {\n    margin-top: 12rpx;\n    padding: 12rpx 40rpx 12rpx;\n    background: #e4e4e6;\n    border-radius: 64rpx;\n    box-sizing: border-box;\n\n    position: relative;\n\n    .c-custom-input {\n      height: 66rpx;\n      padding: 0 10rpx;\n      line-height: 66rpx;\n      box-sizing: border-box;\n    }\n\n    .c-custom-input-textarea {\n      height: 400rpx;\n      padding: 0 10rpx;\n      line-height: 66rpx;\n      box-sizing: border-box;\n    }\n\n    .select-image-icon {\n      position: absolute;\n      right: 80rpx;\n      bottom: 40rpx;\n      width: 22px;\n      height: 22px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    .money-icon {\n      color: #a5a4a9;\n      margin-right: 12rpx;\n    }\n  }\n}\n\n.popup-header {\n  font-size: 28rpx;\n  font-weight: bold;\n}\n\n.police-rule {\n  padding: 64rpx;\n  box-sizing: border-box;\n}\n\n.agree-button {\n  width: 340rpx;\n  height: 80rpx;\n  line-height: 80rpx;\n  color: #ffffff;\n  background: #d35c78;\n\n  margin-top: 100rpx;\n}\n\n.police-rule {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.offer-button {\n  background: #069db2;\n}\n\n.request-button {\n  background: #d35c78;\n}\n\n.disabled-button {\n  background: #cccccc !important;\n  pointer-events: none;\n}\n</style>\n"],"names":["pickerProps","__spreadProps","baseProps","customLabelClass","makeStringProp","customValueClass","customViewClass","label","String","placeholder","disabled","makeBooleanProp","readonly","loading","loadingColor","title","cancelButtonText","confirmButtonText","required","size","labelWidth","useDefaultSlot","useLabelSlot","error","alignRight","beforeConfirm","Function","closeOnClickModal","safeAreaInsetBottom","ellipsis","columnsHeight","makeNumberProp","valueKey","labelKey","modelValue","type","Number","Array","default","columns","columnChange","displayFormat","zIndex","prop","rules","makeArrayProp","immediateChange","clearable","name","options","virtualHost","addGlobalClass","styleIsolation","translate","useTranslate","props","__props","emit","__emit","pickerViewWd","ref","cell","useCell","innerLoading","popupShow","showValue","pickerValue","displayColumns","resetColumns","isPicking","hasConfirmed","isLoading","computed","value","watch","fn","isFunction","console","getSelectedIndex","length","handleShowValueUpdate","immediate","deep","newValue","deepClone","isArray","parent","form","useParent","FORM_KEY","errorMessage","errorMessages","isRequired","formRequired","key","Object","prototype","hasOwnProperty","call","some","rule","proxy","getCurrentInstance","isDef","nextTick","setShowValue","getSelects","formatColumns","formatArray","valueType","getType","indexOf","slice","map","selected","forEach","target","col","row","findIndex","toString","push","selects","showPopup","onCancel","timmer","setTimeout","clearTimeout","onConfirm","isPass","handleConfirm","$","exposed","values","getValues","getColumnsData","selectedItems","pickerViewChange","items","defaultDisplayFormat","noop","onPickStart","onPickEnd","onMounted","onBeforeMount","showClear","handleClear","clearValue","showArrow","__expose","close","open","setLoading","formData","reactive","renderType","submitType","methodtype","cate_id","condition","description","price","images","imagesRender","from","to","datetime","Date","getTime","fromText","toText","dateText","conditionList","showFrom","richTextContent","agreeSetup","showFromAddressPopup","showToAddressPopup","showFromTimePopup","hkDistrict","root","Kowloon","addressList","onChangeDistrict","pickerView","columnIndex","resolve","item","setColumnData","currentDate","postId","handleSubmit","__async","this","useRedirectTo","params","join","quantity","r","indexPostService","code","data","id","indexPostGoods","currentConditionText","_a","find","handleBackForm","handleClickBack","uni.navigateBack","onLoad","method","category","decodeURIComponent","categoryName","richtext","indexGetRichtext","content","conditionResult","indexCondition","handleClickSelectPictures","uni.chooseImage","count","sizeType","sourceType","success","res","uni.uploadFile","url","filePath","tempFilePaths","log","result","JSON","parse","useToast","fullurl","handleConfirmFromAddress","handleConfirmToAddress","handleConfirmDateTime","moment","format","isFormComplete","baseFields","every","v"],"mappings":"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"}