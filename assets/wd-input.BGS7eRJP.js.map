{"version":3,"file":"wd-input.BGS7eRJP.js","sources":["../../../../src/uni_modules/wot-design-uni/components/wd-input/types.ts","../../../../src/uni_modules/wot-design-uni/components/wd-input/wd-input.vue"],"sourcesContent":["import type { PropType } from 'vue'\nimport { baseProps, makeArrayProp, makeBooleanProp, makeNumberProp, makeNumericProp, makeStringProp } from '../common/props'\nimport type { FormItemRule } from '../wd-form/types'\n\nexport type InputClearTrigger = 'focus' | 'always'\n\nexport type InputType = 'text' | 'number' | 'digit' | 'idcard' | 'safe-password' | 'nickname' | 'tel'\n\nexport type InputConfirmType = 'send' | 'search' | 'next' | 'go' | 'done'\n\nexport type InputSize = 'large'\n\nexport type InputMode = 'none' | 'text' | 'decimal' | 'numeric' | 'tel' | 'search' | 'email' | 'url'\n\nexport const inputProps = {\n  ...baseProps,\n  customInputClass: makeStringProp(''),\n  customLabelClass: makeStringProp(''),\n  // 原生属性\n  /**\n   * 占位文本\n   */\n  placeholder: String,\n  /**\n   * 原生属性，指定 placeholder 的样式，目前仅支持color,font-size和font-weight\n   */\n  placeholderStyle: String,\n  /**\n   * 原生属性，指定 placeholder 的样式类\n   */\n  placeholderClass: makeStringProp(''),\n  /**\n   * 原生属性，指定光标与键盘的距离。取 input 距离底部的距离和cursor-spacing指定的距离的最小值作为光标与键盘的距离\n   */\n  cursorSpacing: makeNumberProp(0),\n  /**\n   * 原生属性，指定focus时的光标位置\n   */\n  cursor: makeNumberProp(-1),\n  /**\n   * 原生属性，光标起始位置，自动聚集时有效，需与selection-end搭配使用\n   */\n  selectionStart: makeNumberProp(-1),\n  /**\n   * 原生属性，光标结束位置，自动聚集时有效，需与selection-start搭配使用\n   */\n  selectionEnd: makeNumberProp(-1),\n  /**\n   * 原生属性，键盘弹起时，是否自动上推页面\n   */\n  adjustPosition: makeBooleanProp(true),\n  /**\n   * focus时，点击页面的时候不收起键盘\n   */\n  holdKeyboard: makeBooleanProp(false),\n  /**\n   * 设置键盘右下角按钮的文字，仅在type='text'时生效，可选值：done / go / next / search / send\n   */\n  confirmType: makeStringProp<InputConfirmType>('done'),\n  /**\n   * 点击键盘右下角按钮时是否保持键盘不收起\n   */\n  confirmHold: makeBooleanProp(false),\n  /**\n   * 原生属性，获取焦点\n   */\n  focus: makeBooleanProp(false),\n  /**\n   * 类型，可选值：text / number / digit / idcard / safe-password / nickname / tel\n   */\n  type: makeStringProp<InputType>('text'),\n  /**\n   * 原生属性，最大长度\n   */\n  maxlength: {\n    type: Number,\n    // #ifndef MP-ALIPAY\n    default: -1\n    // #endif\n  },\n  /**\n   * 原生属性，禁用\n   */\n  disabled: makeBooleanProp(false),\n  /**\n   * 微信小程序原生属性，强制 input 处于同层状态，默认 focus 时 input 会切到非同层状态 (仅在 iOS 下生效)\n   */\n  alwaysEmbed: makeBooleanProp(false),\n  // 原生属性结束\n  /**\n   * 输入框的值靠右展示\n   */\n  alignRight: makeBooleanProp(false),\n  /**\n   * 绑定值\n   */\n  modelValue: makeNumericProp(''),\n  /**\n   * 显示为密码框\n   */\n  showPassword: makeBooleanProp(false),\n  /**\n   * 显示清空按钮\n   */\n  clearable: makeBooleanProp(false),\n  /**\n   * 只读\n   */\n  readonly: makeBooleanProp(false),\n  /**\n   * 前置图标，icon组件中的图标类名\n   */\n  prefixIcon: String,\n  /**\n   * 后置图标，icon组件中的图标类名\n   */\n  suffixIcon: String,\n  /**\n   * 显示字数限制，需要同时设置 maxlength\n   */\n  showWordLimit: makeBooleanProp(false),\n  /**\n   * 设置左侧标题\n   */\n  label: String,\n  /**\n   * 设置左侧标题宽度\n   */\n  labelWidth: makeStringProp(''),\n  /**\n   * 设置输入框大小，可选值：large\n   */\n  size: String as PropType<InputSize>,\n  /**\n   * 设置输入框错误状态，错误状态时为红色\n   */\n  error: makeBooleanProp(false),\n  /**\n   * 当有label属性时，设置标题和输入框垂直居中，默认为顶部居中\n   */\n  center: makeBooleanProp(false),\n  /**\n   * 非 cell 类型下是否隐藏下划线\n   */\n  noBorder: makeBooleanProp(false),\n  /**\n   * 是否必填\n   */\n  required: makeBooleanProp(false),\n  /**\n   * 表单域 model 字段名，在使用表单校验功能的情况下，该属性是必填的\n   */\n  prop: String,\n  /**\n   * 表单验证规则，结合wd-form组件使用\n   */\n  rules: makeArrayProp<FormItemRule>(),\n  /**\n   * 显示清除图标的时机，always 表示输入框不为空时展示，focus 表示输入框聚焦且不为空时展示\n   * 类型: \"focus\" | \"always\"\n   * 默认值: \"always\"\n   */\n  clearTrigger: makeStringProp<InputClearTrigger>('always'),\n  /**\n   * 是否在点击清除按钮时聚焦输入框\n   * 类型: boolean\n   * 默认值: true\n   */\n  focusWhenClear: makeBooleanProp(true),\n  /**\n   * 是否忽略组件内对文本合成系统事件的处理。为 false 时将触发 compositionstart、compositionend、compositionupdate 事件，且在文本合成期间会触发 input 事件\n   * 类型: boolean\n   * 默认值: true\n   */\n  ignoreCompositionEvent: makeBooleanProp(true),\n  /**\n   * 它提供了用户在编辑元素或其内容时可能输入的数据类型的提示。在符合条件的高版本webview里，uni-app的web和app-vue平台中可使用本属性。\n   * 类型: InputMode\n   * 可选值: \"none\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | \"search\" | \"password\"\n   * 默认值: \"text\"\n   */\n  inputmode: makeStringProp<InputMode>('text')\n}\n","<template>\n  <view :class=\"rootClass\" :style=\"customStyle\" @click=\"handleClick\">\n    <view v-if=\"label || $slots.label\" :class=\"labelClass\" :style=\"labelStyle\">\n      <view v-if=\"prefixIcon || $slots.prefix\" class=\"wd-input__prefix\">\n        <wd-icon v-if=\"prefixIcon && !$slots.prefix\" custom-class=\"wd-input__icon\" :name=\"prefixIcon\" @click=\"onClickPrefixIcon\" />\n        <slot v-else name=\"prefix\"></slot>\n      </view>\n      <view class=\"wd-input__label-inner\">\n        <template v-if=\"label && !$slots.label\">{{ label }}</template>\n        <slot v-else name=\"label\"></slot>\n      </view>\n    </view>\n    <view class=\"wd-input__body\">\n      <view class=\"wd-input__value\">\n        <view v-if=\"(prefixIcon || $slots.prefix) && !label\" class=\"wd-input__prefix\">\n          <wd-icon v-if=\"prefixIcon && !$slots.prefix\" custom-class=\"wd-input__icon\" :name=\"prefixIcon\" @click=\"onClickPrefixIcon\" />\n          <slot v-else name=\"prefix\"></slot>\n        </view>\n        <input\n          :class=\"[\n            'wd-input__inner',\n            prefixIcon ? 'wd-input__inner--prefix' : '',\n            showWordCount ? 'wd-input__inner--count' : '',\n            alignRight ? 'is-align-right' : '',\n            customInputClass\n          ]\"\n          :type=\"type\"\n          :password=\"showPassword && !isPwdVisible\"\n          v-model=\"inputValue\"\n          :placeholder=\"placeholderValue\"\n          :disabled=\"disabled || readonly\"\n          :maxlength=\"maxlength\"\n          :focus=\"focused\"\n          :confirm-type=\"confirmType\"\n          :confirm-hold=\"confirmHold\"\n          :cursor=\"cursor\"\n          :cursor-spacing=\"cursorSpacing\"\n          :placeholder-style=\"placeholderStyle\"\n          :selection-start=\"selectionStart\"\n          :selection-end=\"selectionEnd\"\n          :adjust-position=\"adjustPosition\"\n          :hold-keyboard=\"holdKeyboard\"\n          :always-embed=\"alwaysEmbed\"\n          :placeholder-class=\"inputPlaceholderClass\"\n          :ignoreCompositionEvent=\"ignoreCompositionEvent\"\n          :inputmode=\"inputmode\"\n          @input=\"handleInput\"\n          @focus=\"handleFocus\"\n          @blur=\"handleBlur\"\n          @confirm=\"handleConfirm\"\n          @keyboardheightchange=\"handleKeyboardheightchange\"\n        />\n        <view v-if=\"props.readonly\" class=\"wd-input__readonly-mask\" />\n        <view v-if=\"showClear || showPassword || suffixIcon || showWordCount || $slots.suffix\" class=\"wd-input__suffix\">\n          <wd-icon v-if=\"showClear\" custom-class=\"wd-input__clear\" name=\"error-fill\" @click=\"handleClear\" />\n          <wd-icon v-if=\"showPassword\" custom-class=\"wd-input__icon\" :name=\"isPwdVisible ? 'view' : 'eye-close'\" @click=\"togglePwdVisible\" />\n          <view v-if=\"showWordCount\" class=\"wd-input__count\">\n            <text\n              :class=\"[\n              inputValue && String(inputValue).length > 0 ? 'wd-input__count-current' : '',\n              String(inputValue).length > maxlength! ? 'is-error' : ''\n            ]\"\n            >\n              {{ String(inputValue).length }}\n            </text>\n            /{{ maxlength }}\n          </view>\n          <wd-icon v-if=\"suffixIcon && !$slots.suffix\" custom-class=\"wd-input__icon\" :name=\"suffixIcon\" @click=\"onClickSuffixIcon\" />\n          <slot v-else name=\"suffix\"></slot>\n        </view>\n      </view>\n      <view v-if=\"errorMessage\" class=\"wd-input__error-message\">{{ errorMessage }}</view>\n    </view>\n  </view>\n</template>\n\n<script lang=\"ts\">\nexport default {\n  name: 'wd-input',\n  options: {\n    virtualHost: true,\n    addGlobalClass: true,\n    styleIsolation: 'shared'\n  }\n}\n</script>\n\n<script lang=\"ts\" setup>\nimport { computed, ref, watch, useSlots, type Slots } from 'vue'\nimport wdIcon from '../wd-icon/wd-icon.vue'\nimport { isDef, objToStyle, pause, isEqual } from '../common/util'\nimport { useCell } from '../composables/useCell'\nimport { FORM_KEY, type FormItemRule } from '../wd-form/types'\nimport { useParent } from '../composables/useParent'\nimport { useTranslate } from '../composables/useTranslate'\nimport { inputProps } from './types'\n\ninterface InputSlots extends Slots {\n  prefix?: () => any\n  suffix?: () => any\n  label?: () => any\n}\n\nconst props = defineProps(inputProps)\nconst emit = defineEmits([\n  'update:modelValue',\n  'clear',\n  'blur',\n  'focus',\n  'input',\n  'keyboardheightchange',\n  'confirm',\n  'clicksuffixicon',\n  'clickprefixicon',\n  'click'\n])\nconst slots = useSlots() as InputSlots\nconst { translate } = useTranslate('input')\n\nconst isPwdVisible = ref<boolean>(false)\nconst clearing = ref<boolean>(false) // 是否正在清空操作，避免重复触发失焦\nconst focused = ref<boolean>(false) // 控制聚焦\nconst focusing = ref<boolean>(false) // 当前是否激活状态\nconst inputValue = ref<string | number>(getInitValue()) // 输入框的值\nconst cell = useCell()\n\nwatch(\n  () => props.focus,\n  (newValue) => {\n    focused.value = newValue\n  },\n  { immediate: true, deep: true }\n)\n\nwatch(\n  () => props.modelValue,\n  (newValue) => {\n    inputValue.value = isDef(newValue) ? String(newValue) : ''\n  }\n)\n\nconst { parent: form } = useParent(FORM_KEY)\n\nconst placeholderValue = computed(() => {\n  return isDef(props.placeholder) ? props.placeholder : translate('placeholder')\n})\n\n/**\n * 展示清空按钮\n */\nconst showClear = computed(() => {\n  const { disabled, readonly, clearable, clearTrigger } = props\n  if (clearable && !readonly && !disabled && inputValue.value && (clearTrigger === 'always' || (props.clearTrigger === 'focus' && focusing.value))) {\n    return true\n  } else {\n    return false\n  }\n})\n\n/**\n * 展示字数统计\n */\nconst showWordCount = computed(() => {\n  const { disabled, readonly, maxlength, showWordLimit } = props\n  return Boolean(!disabled && !readonly && isDef(maxlength) && maxlength > -1 && showWordLimit)\n})\n\n/**\n * 表单错误提示信息\n */\nconst errorMessage = computed(() => {\n  if (form && props.prop && form.errorMessages && form.errorMessages[props.prop]) {\n    return form.errorMessages[props.prop]\n  } else {\n    return ''\n  }\n})\n\n// 是否展示必填\nconst isRequired = computed(() => {\n  let formRequired = false\n  if (form && form.props.rules) {\n    const rules = form.props.rules\n    for (const key in rules) {\n      if (Object.prototype.hasOwnProperty.call(rules, key) && key === props.prop && Array.isArray(rules[key])) {\n        formRequired = rules[key].some((rule: FormItemRule) => rule.required)\n      }\n    }\n  }\n  return props.required || props.rules.some((rule) => rule.required) || formRequired\n})\n\nconst rootClass = computed(() => {\n  return `wd-input  ${props.label || slots.label ? 'is-cell' : ''} ${props.center ? 'is-center' : ''} ${cell.border.value ? 'is-border' : ''} ${\n    props.size ? 'is-' + props.size : ''\n  } ${props.error ? 'is-error' : ''} ${props.disabled ? 'is-disabled' : ''}  ${\n    inputValue.value && String(inputValue.value).length > 0 ? 'is-not-empty' : ''\n  }  ${props.noBorder ? 'is-no-border' : ''} ${props.customClass}`\n})\n\nconst labelClass = computed(() => {\n  return `wd-input__label ${props.customLabelClass} ${isRequired.value ? 'is-required' : ''}`\n})\n\nconst inputPlaceholderClass = computed(() => {\n  return `wd-input__placeholder  ${props.placeholderClass}`\n})\n\nconst labelStyle = computed(() => {\n  return props.labelWidth\n    ? objToStyle({\n        'min-width': props.labelWidth,\n        'max-width': props.labelWidth\n      })\n    : ''\n})\n\n// 状态初始化\nfunction getInitValue() {\n  const formatted = formatValue(props.modelValue)\n  if (!isValueEqual(formatted, props.modelValue)) {\n    emit('update:modelValue', formatted)\n  }\n  return formatted\n}\n\nfunction formatValue(value: string | number) {\n  const { maxlength } = props\n  if (isDef(maxlength) && maxlength !== -1 && String(value).length > maxlength) {\n    return value.toString().slice(0, maxlength)\n  }\n  return value\n}\n\nfunction togglePwdVisible() {\n  isPwdVisible.value = !isPwdVisible.value\n}\nasync function handleClear() {\n  focusing.value = false\n  inputValue.value = ''\n  if (props.focusWhenClear) {\n    clearing.value = true\n    focused.value = false\n  }\n  await pause()\n  if (props.focusWhenClear) {\n    focused.value = true\n    focusing.value = true\n  }\n  emit('update:modelValue', inputValue.value)\n  emit('clear')\n}\nasync function handleBlur() {\n  // 等待150毫秒，clear执行完毕\n  await pause(150)\n  if (clearing.value) {\n    clearing.value = false\n    return\n  }\n  focusing.value = false\n  emit('blur', {\n    value: inputValue.value\n  })\n}\nfunction handleFocus({ detail }: any) {\n  focusing.value = true\n  emit('focus', detail)\n}\nfunction handleInput({ detail }: any) {\n  emit('update:modelValue', inputValue.value)\n  emit('input', detail)\n}\nfunction handleKeyboardheightchange({ detail }: any) {\n  emit('keyboardheightchange', detail)\n}\nfunction handleConfirm({ detail }: any) {\n  emit('confirm', detail)\n}\nfunction onClickSuffixIcon() {\n  emit('clicksuffixicon')\n}\nfunction onClickPrefixIcon() {\n  emit('clickprefixicon')\n}\nfunction handleClick(event: MouseEvent) {\n  emit('click', event)\n}\nfunction isValueEqual(value1: number | string, value2: number | string) {\n  return isEqual(String(value1), String(value2))\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import './index.scss';\n</style>\n<style lang=\"scss\" scoped>\n@import './placeholder.scss';\n</style>\n"],"names":["inputProps","__spreadProps","baseProps","customInputClass","makeStringProp","customLabelClass","placeholder","String","placeholderStyle","placeholderClass","cursorSpacing","makeNumberProp","cursor","selectionStart","selectionEnd","adjustPosition","makeBooleanProp","holdKeyboard","confirmType","confirmHold","focus","type","maxlength","Number","default","disabled","alwaysEmbed","alignRight","modelValue","makeNumericProp","showPassword","clearable","readonly","prefixIcon","suffixIcon","showWordLimit","label","labelWidth","size","error","center","noBorder","required","prop","rules","makeArrayProp","clearTrigger","focusWhenClear","ignoreCompositionEvent","inputmode","name","options","virtualHost","addGlobalClass","styleIsolation","props","__props","emit","__emit","slots","useSlots","translate","useTranslate","isPwdVisible","ref","clearing","focused","focusing","inputValue","formatted","value","isDef","length","toString","slice","formatValue","value1","value2","isEqual","getInitValue","cell","useCell","watch","newValue","immediate","deep","parent","form","useParent","FORM_KEY","placeholderValue","computed","showClear","showWordCount","Boolean","errorMessage","errorMessages","isRequired","formRequired","key","Object","prototype","hasOwnProperty","call","Array","isArray","some","rule","rootClass","border","customClass","labelClass","inputPlaceholderClass","labelStyle","objToStyle","togglePwdVisible","handleClear","__async","this","pause","handleBlur","handleFocus","detail","handleInput","handleKeyboardheightchange","handleConfirm","onClickSuffixIcon","onClickPrefixIcon","handleClick","event"],"mappings":"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"}