{"version":3,"file":"pages-register-index.D4b0a5XY.js","sources":["../../../../src/uni_modules/wot-design-uni/components/wd-checkbox-group/types.ts","../../../../src/uni_modules/wot-design-uni/components/wd-checkbox/types.ts","../../../../src/uni_modules/wot-design-uni/components/wd-checkbox/wd-checkbox.vue","../../../../src/pages/register/index.vue"],"sourcesContent":["import { type ExtractPropTypes, type InjectionKey, type PropType } from 'vue'\nimport type { CheckShape } from '../wd-checkbox/types'\nimport { baseProps, makeBooleanProp, makeNumberProp, makeStringProp } from '../common/props'\n\nexport type RequiredModelValue = {\n  modelValue: Array<string | number | boolean>\n}\n\nexport type checkboxGroupProvide = {\n  props: Partial<Omit<CheckboxGroupProps, 'modelValue'>> & RequiredModelValue\n  changeSelectState: (value: string | number | boolean) => void\n}\n\nexport const CHECKBOX_GROUP_KEY: InjectionKey<checkboxGroupProvide> = Symbol('wd-checkbox-group')\n\nexport const checkboxGroupProps = {\n  ...baseProps,\n  /**\n   * 绑定值\n   */\n  modelValue: {\n    type: Array as PropType<Array<string | number | boolean>>,\n    default: () => []\n  },\n  /**\n   * 表单模式\n   */\n  cell: makeBooleanProp(false),\n  /**\n   * 单选框形状，可选值：circle / square / button\n   */\n  shape: makeStringProp<CheckShape>('circle'),\n  /**\n   * 选中的颜色\n   */\n  checkedColor: String,\n  /**\n   * 禁用\n   */\n  disabled: makeBooleanProp(false),\n  /**\n   * 最小选中的数量\n   */\n  min: makeNumberProp(0),\n  /**\n   * 最大选中的数量，0 为无限数量，默认为 0\n   */\n  max: makeNumberProp(0),\n  /**\n   * 同行展示\n   */\n  inline: makeBooleanProp(false),\n  /**\n   * 设置大小，可选值：large\n   */\n  size: String\n}\n\nexport type CheckboxGroupProps = ExtractPropTypes<typeof checkboxGroupProps>\n","import type { ComponentPublicInstance, ExtractPropTypes, PropType } from 'vue'\nimport { baseProps, makeStringProp } from '../common/props'\n\nexport type CheckShape = 'circle' | 'square' | 'button'\n\nexport const checkboxProps = {\n  ...baseProps,\n  customLabelClass: makeStringProp(''),\n  customShapeClass: makeStringProp(''),\n  /**\n   * 单选框选中时的值\n   */\n  modelValue: {\n    type: [String, Number, Boolean],\n    required: true,\n    default: false\n  },\n  /**\n   * 单选框形状，可选值：circle / square / button\n   */\n  shape: {\n    type: String as PropType<CheckShape>\n  },\n  /**\n   * 选中的颜色\n   */\n  checkedColor: String,\n  /**\n   * 禁用\n   */\n  disabled: {\n    type: [Boolean, null] as PropType<boolean | null>,\n    default: null\n  },\n  /**\n   * 选中值，在 checkbox-group 中使用无效，需同 false-value 一块使用\n   */\n  trueValue: {\n    type: [String, Number, Boolean],\n    default: true\n  },\n  /**\n   * 非选中时的值，在 checkbox-group 中使用无效，需同 true-value 一块使用\n   */\n  falseValue: {\n    type: [String, Number, Boolean],\n    default: false\n  },\n  /**\n   * 设置大小，可选值：large\n   */\n  size: String,\n  /**\n   * 文字位置最大宽度\n   */\n  maxWidth: String\n}\n\nexport type CheckboxProps = ExtractPropTypes<typeof checkboxProps>\n\nexport type CheckboxExpose = {\n  /**\n   *  切换当前选中状态\n   */\n  toggle: () => void\n}\n\nexport type CheckboxInstance = ComponentPublicInstance<CheckboxProps, CheckboxExpose>\n","<template>\n  <view\n    :class=\"`wd-checkbox ${innerCell ? 'is-cell-box' : ''} ${innerShape === 'button' ? 'is-button-box' : ''} ${isChecked ? 'is-checked' : ''} ${\n      isFirst ? 'is-first-child' : ''\n    } ${isLast ? 'is-last-child' : ''} ${innerInline ? 'is-inline' : ''} ${innerShape === 'button' ? 'is-button' : ''} ${\n      innerDisabled ? 'is-disabled' : ''\n    } ${innerSize ? 'is-' + innerSize : ''} ${customClass}`\"\n    :style=\"customStyle\"\n    @click=\"toggle\"\n  >\n    <!--shape为button时，移除wd-checkbox__shape，只保留wd-checkbox__label-->\n    <view\n      v-if=\"innerShape !== 'button'\"\n      :class=\"`wd-checkbox__shape ${innerShape === 'square' ? 'is-square' : ''} ${customShapeClass}`\"\n      :style=\"isChecked && !innerDisabled && innerCheckedColor ? 'color :' + innerCheckedColor : ''\"\n    >\n      <wd-icon custom-class=\"wd-checkbox__check\" name=\"check-bold\" />\n    </view>\n    <!--shape为button时只保留wd-checkbox__label-->\n    <view\n      :class=\"`wd-checkbox__label ${customLabelClass}`\"\n      :style=\"isChecked && innerShape === 'button' && !innerDisabled && innerCheckedColor ? 'color:' + innerCheckedColor : ''\"\n    >\n      <!--button选中时展示的icon-->\n      <wd-icon v-if=\"innerShape === 'button' && isChecked\" custom-class=\"wd-checkbox__btn-check\" name=\"check-bold\" />\n      <!--文案-->\n      <view class=\"wd-checkbox__txt\" :style=\"maxWidth ? 'max-width:' + maxWidth : ''\">\n        <slot></slot>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script lang=\"ts\">\nexport default {\n  name: 'wd-checkbox',\n  options: {\n    addGlobalClass: true,\n    virtualHost: true,\n    styleIsolation: 'shared'\n  }\n}\n</script>\n\n<script lang=\"ts\" setup>\nimport wdIcon from '../wd-icon/wd-icon.vue'\nimport { computed, getCurrentInstance, onBeforeMount, watch } from 'vue'\nimport { useParent } from '../composables/useParent'\nimport { CHECKBOX_GROUP_KEY } from '../wd-checkbox-group/types'\nimport { getPropByPath, isDef } from '../common/util'\nimport { checkboxProps, type CheckboxExpose } from './types'\n\nconst props = defineProps(checkboxProps)\nconst emit = defineEmits(['change', 'update:modelValue'])\n\ndefineExpose<CheckboxExpose>({\n  toggle\n})\n\nconst { parent: checkboxGroup, index } = useParent(CHECKBOX_GROUP_KEY)\n\nconst isChecked = computed(() => {\n  if (checkboxGroup) {\n    return checkboxGroup.props.modelValue.indexOf(props.modelValue) > -1\n  } else {\n    return props.modelValue === props.trueValue\n  }\n}) // 是否被选中\n\nconst isFirst = computed(() => {\n  return index.value === 0\n})\n\nconst isLast = computed(() => {\n  const children = isDef(checkboxGroup) ? checkboxGroup.children : []\n  return index.value === children.length - 1\n})\nconst { proxy } = getCurrentInstance() as any\n\nwatch(\n  () => props.modelValue,\n  () => {\n    // 组合使用走这个逻辑\n    if (checkboxGroup) {\n      checkName()\n    }\n  }\n)\n\nwatch(\n  () => props.shape,\n  (newValue) => {\n    const type = ['circle', 'square', 'button']\n    if (isDef(newValue) && type.indexOf(newValue) === -1) console.error(`shape must be one of ${type.toString()}`)\n  }\n)\n\nconst innerShape = computed(() => {\n  return props.shape || getPropByPath(checkboxGroup, 'props.shape') || 'circle'\n})\n\nconst innerCheckedColor = computed(() => {\n  return props.checkedColor || getPropByPath(checkboxGroup, 'props.checkedColor')\n})\n\nconst innerDisabled = computed(() => {\n  if (!checkboxGroup) {\n    return props.disabled\n  }\n  const { max, min, modelValue, disabled } = checkboxGroup.props\n  if (\n    (max && modelValue.length >= max && !isChecked.value) ||\n    (min && modelValue.length <= min && isChecked.value) ||\n    props.disabled === true ||\n    (disabled && props.disabled === null)\n  ) {\n    return true\n  }\n\n  return props.disabled\n})\n\nconst innerInline = computed(() => {\n  return getPropByPath(checkboxGroup, 'props.inline') || false\n})\n\nconst innerCell = computed(() => {\n  return getPropByPath(checkboxGroup, 'props.cell') || false\n})\n\nconst innerSize = computed(() => {\n  return props.size || getPropByPath(checkboxGroup, 'props.size')\n})\n\nonBeforeMount(() => {\n  // eslint-disable-next-line quotes\n  if (props.modelValue === null) console.error(\"checkbox's value must be set\")\n})\n\n/**\n * @description 检测checkbox绑定的value是否和其它checkbox的value冲突\n * @param {Object} self 自身\n * @param  myName 自己的标识符\n */\nfunction checkName() {\n  checkboxGroup &&\n    checkboxGroup.children &&\n    checkboxGroup.children.forEach((child: any) => {\n      if (child.$.uid !== proxy.$.uid && child.modelValue === props.modelValue) {\n        console.error(`The checkbox's bound value: ${props.modelValue} has been used`)\n      }\n    })\n}\n/**\n * @description 点击checkbox的Event handle\n */\nfunction toggle() {\n  if (innerDisabled.value) return\n  // 复选框单独使用时点击反选，并且在checkbox上触发change事件\n  if (checkboxGroup) {\n    emit('change', {\n      value: !isChecked.value\n    })\n    checkboxGroup.changeSelectState(props.modelValue)\n  } else {\n    const newVal = props.modelValue === props.trueValue ? props.falseValue : props.trueValue\n    emit('update:modelValue', newVal)\n    emit('change', {\n      value: newVal\n    })\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import './index.scss';\n</style>\n","<template>\n  <view class=\"container\">\n    <view class=\"content\">\n      <view class=\"header\">\n        <wd-icon\n          v-if=\"fromSource == 1\"\n          name=\"thin-arrow-left\"\n          size=\"18px\"\n          color=\"#FFFFFF\"\n          @click=\"handleClickBack\"\n        />\n      </view>\n      <!-- Step 1: Create Account -->\n      <view v-if=\"currentStep === 1\" class=\"footer_fakePopup\">\n        <view class=\"main_logo\">\n          <image\n            style=\"width: 100%\"\n            src=\"@/static/login/logo_white_background.png\"\n            mode=\"widthFix\"\n          />\n        </view>\n        <view class=\"topText\">create an account</view>\n        <view class=\"centerButton\" @click=\"navigateToStep(2)\">\n          Continue with Email\n        </view>\n        <view class=\"bottomInfo\">\n          <text style=\"padding-bottom: 10px\">\n            Already have an IdleMan Account?\n          </text>\n          <text style=\"padding-bottom: 10px\">\n            Click here to &nbsp;&nbsp;&nbsp;&nbsp;\n            <text\n              style=\"color: #069db2; text-decoration: underline\"\n              @click=\"redirectToLogin\"\n            >\n              sign in\n            </text>\n          </text>\n        </view>\n      </view>\n\n      <!-- Step 2: Email Input -->\n      <view v-if=\"currentStep === 2\" class=\"footer_fakePopup\">\n        <view class=\"main_logo\">\n          <image\n            style=\"width: 100%\"\n            src=\"@/static/login/logo_white_background.png\"\n            mode=\"widthFix\"\n          />\n        </view>\n        <view class=\"control_container\">\n          <view class=\"first_line\">What's your email?</view>\n          <view class=\"second_line\">We'll check if you have an account.</view>\n          <view class=\"email_input_area\">\n            <text class=\"label\">Email</text>\n            <view class=\"input_content\">\n              <wd-input\n                custom-class=\"customWdInput\"\n                prop=\"value1\"\n                v-model=\"registrationForm.email\"\n                placeholder=\"example@example.com\"\n                :adjust-position=\"false\"\n                :rules=\"[\n                  { required: true, message: 'please input your email' },\n                ]\"\n              />\n            </view>\n          </view>\n          <view class=\"bottom_button\" @click=\"proceedFromEmailInput\">\n            continue\n          </view>\n        </view>\n      </view>\n\n      <!-- Step 3: Verify Email Button -->\n      <view v-if=\"currentStep === 3\" class=\"footer_fakePopup\">\n        <view class=\"main_logo\">\n          <image\n            style=\"width: 100%\"\n            src=\"@/static/login/logo_white_background.png\"\n            mode=\"widthFix\"\n          />\n        </view>\n        <view class=\"control_container\">\n          <view class=\"first_line\">Verify your email and get started!</view>\n          <view class=\"second_line\">Check the email to sign-up instantly!</view>\n          <view class=\"bottom_button\" @click=\"sendEmailVerificationCode\">\n            VERIFY NOW\n          </view>\n        </view>\n      </view>\n\n      <!-- Step 4: Email Sent Info -->\n      <view v-if=\"currentStep === 4\" class=\"footer_fakePopup\">\n        <view class=\"main_logo\">\n          <image\n            style=\"width: 100%\"\n            src=\"@/static/login/logo_white_background.png\"\n            mode=\"widthFix\"\n          />\n        </view>\n        <view class=\"control_container\">\n          <view class=\"first_line\">\n            We' ve sent a verification link to {{ registrationForm.email }}\n          </view>\n          <view class=\"second_line\">Click the link and get started!</view>\n          <view class=\"bottom_button\" @click=\"handleResendRequest\">RESEND</view>\n        </view>\n      </view>\n\n      <!-- Step 5: Mobile Input -->\n      <view v-if=\"currentStep === 5\" class=\"footer_fakePopup\">\n        <view class=\"main_logo\">\n          <image\n            style=\"width: 100%\"\n            src=\"@/static/login/logo_white_background.png\"\n            mode=\"widthFix\"\n          />\n        </view>\n        <view class=\"control_container\">\n          <view class=\"first_line\">What's your Mobile?</view>\n          <view class=\"second_line\">We'll check if you have an account.</view>\n          <view class=\"email_input_area\">\n            <text class=\"label\">Mobile</text>\n            <view class=\"input_content\">\n              <wd-input\n                custom-class=\"customWdInput\"\n                prop=\"mobile\"\n                v-model=\"registrationForm.mobile\"\n                placeholder=\"+852\"\n                :adjust-position=\"false\"\n                :maxlength=\"8\"\n                :rules=\"[\n                  { required: true, message: 'please input your phone number' },\n                ]\"\n              />\n            </view>\n          </view>\n          <!--<view class=\"bottom_button\" @click=\"proceedFromMobileInput\">-->\n          <!--  continue-->\n          <!--</view>-->\n          <view class=\"bottom_button\" @click=\"handleVerifyMobile\">\n            Verify\n          </view>\n        </view>\n      </view>\n\n      <!-- Step 6: Verify Mobile Button -->\n      <view v-if=\"currentStep === 6\" class=\"footer_fakePopup\">\n        <view class=\"main_logo\">\n          <image\n            style=\"width: 100%\"\n            src=\"@/static/login/logo_white_background.png\"\n            mode=\"widthFix\"\n          />\n        </view>\n        <view class=\"control_container\">\n          <view class=\"first_line\">Verify your Mobile and get started!</view>\n          <view class=\"second_line\">\n            Check the Mobile to sign-up instantly!\n          </view>\n          <view class=\"bottom_button\" @click=\"requestSmsVerificationCode\">\n            VERIFY NOW\n          </view>\n        </view>\n      </view>\n\n      <!-- Step 7: SMS OTP Input -->\n      <view v-if=\"currentStep === 7\" class=\"footer_fakePopup\">\n        <view class=\"main_logo\">\n          <image\n            style=\"width: 100%\"\n            src=\"@/static/login/logo_white_background.png\"\n            mode=\"widthFix\"\n          />\n        </view>\n        <view class=\"control_container\">\n          <view class=\"email_input_area\">\n            <text class=\"label\">\n              We' ve sent the SMS OTP to +852 {{ registrationForm.mobile }}.\n            </text>\n            <view class=\"input_content\">\n              <wd-input\n                custom-class=\"customWdInput\"\n                prop=\"value1\"\n                v-model=\"registrationForm.smsCode\"\n                placeholder=\"SMS OPT\"\n                :adjust-position=\"false\"\n                :rules=\"[\n                  { required: true, message: 'please input your SMS OTP' },\n                ]\"\n              />\n            </view>\n          </view>\n          <view class=\"bottom_container\">\n            <view class=\"desc_title\">\n              Cannot recerive the SMS OPT? CLICK here to resend!\n            </view>\n            <view class=\"bottom_button\" @click=\"resendSmsVerificationCode\"\n              >RESEND\n            </view>\n            <view class=\"bottom_button\" @click=\"verifyAndBindMobile\"\n              >VERIFY NOW\n            </view>\n          </view>\n        </view>\n      </view>\n\n      <!-- Step 8: User Info Input (firstname, lastname, username, password) -->\n      <view v-if=\"currentStep === 8\" class=\"footer_fakePopup\">\n        <view class=\"main_logo\">\n          <image\n            style=\"width: 100%\"\n            src=\"@/static/login/logo_white_background.png\"\n            mode=\"widthFix\"\n          />\n        </view>\n        <view class=\"control_container\">\n          <view class=\"first_line\">Let's get started!</view>\n          <view class=\"second_line\">Create an account with your email</view>\n          <view class=\"third_line\">{{ registrationForm.email }}</view>\n          <view class=\"email_input_area\">\n            <text class=\"label\">Name</text>\n            <view class=\"input_content\">\n              <wd-input\n                custom-class=\"customWdInput\"\n                prop=\"firstname\"\n                v-model=\"registrationForm.firstname\"\n                placeholder=\"First Name\"\n                :adjust-position=\"false\"\n                :rules=\"[\n                  { required: true, message: 'Please type your first name' },\n                ]\"\n              />\n              <wd-input\n                custom-class=\"customWdInput\"\n                prop=\"lastname\"\n                v-model=\"registrationForm.lastname\"\n                placeholder=\"Last Name\"\n                :adjust-position=\"false\"\n                :rules=\"[\n                  { required: true, message: 'Please type your last name' },\n                ]\"\n              />\n            </view>\n          </view>\n          <view class=\"email_input_area\">\n            <text class=\"label\">Username</text>\n            <view class=\"input_content\">\n              <wd-input\n                custom-class=\"customWdInput\"\n                prop=\"nickname\"\n                v-model=\"registrationForm.nickname\"\n                placeholder=\"Display user name\"\n                :adjust-position=\"false\"\n                :rules=\"[\n                  { required: true, message: 'please type your username' },\n                ]\"\n              />\n            </view>\n          </view>\n          <view class=\"email_input_area\">\n            <text class=\"label\">Password</text>\n            <!-- Corrected label from Username to Password -->\n            <view class=\"input_content\">\n              <wd-input\n                custom-class=\"customWdInput\"\n                prop=\"password\"\n                v-model=\"registrationForm.password\"\n                placeholder=\"Set up your password\"\n                type=\"password\"\n                :adjust-position=\"false\"\n                :rules=\"[\n                  { required: true, message: 'please type your password' },\n                ]\"\n              />\n            </view>\n          </view>\n          <view class=\"bottom_button\" @click=\"goToTermsStep\">continue</view>\n        </view>\n      </view>\n\n      <!-- Step 9: Terms & Conditions -->\n      <view v-if=\"currentStep === 9\" class=\"footer_fakePopup\">\n        <view class=\"main_logo\">\n          <image\n            style=\"width: 100%\"\n            src=\"@/static/login/logo_white_background.png\"\n            mode=\"widthFix\"\n          />\n        </view>\n        <view class=\"control_container\">\n          <view class=\"first_line\">Terms & Conditions</view>\n          <view class=\"second_line\">\n            <wd-checkbox\n              v-model=\"registrationForm.checkBox_termsAndConditions\"\n              style=\"margin-top: 6px; margin-right: 6px\"\n            />\n            <view>\n              <text>I agree and accept to the</text>\n              <text style=\"color: #00569c\" @click=\"handleClickRichText('2')\">\n                Terms and Condition\n              </text>\n              <text>and</text>\n              <text style=\"color: #00569c\" @click=\"handleClickRichText('1')\">\n                Privacy Policy\n              </text>\n            </view>\n          </view>\n          <view class=\"second_line\">\n            <wd-checkbox\n              v-model=\"registrationForm.checkBox_privacyPolicy\"\n              style=\"margin-top: 6px; margin-right: 6px\"\n            />\n            <view>\n              I agree to the use of my personal data for direct marketing\n              purposes as set out in the Privacy Policy\n            </view>\n          </view>\n          <view class=\"bottom_button\" @click=\"finalizeAccountCreation\">\n            CREATE\n          </view>\n        </view>\n      </view>\n\n      <!-- Step 10: Change Password -->\n      <view v-if=\"currentStep === 10\" class=\"footer_fakePopup\">\n        <view class=\"main_logo\">\n          <image\n            style=\"width: 100%\"\n            src=\"@/static/login/logo_white_background.png\"\n            mode=\"widthFix\"\n          />\n        </view>\n        <view class=\"control_container\">\n          <view class=\"email_input_area\">\n            <text class=\"label\">Please enter your new password.</text>\n            <view class=\"input_content\">\n              <wd-input\n                custom-class=\"customWdInput\"\n                prop=\"password\"\n                v-model=\"changePasswordForm.password\"\n                placeholder=\"Password\"\n                type=\"password\"\n                :adjust-position=\"false\"\n                :rules=\"[\n                  { required: true, message: 'please type your password' },\n                ]\"\n              />\n              <wd-input\n                custom-class=\"customWdInput\"\n                prop=\"repassword\"\n                v-model=\"changePasswordForm.repassword\"\n                placeholder=\"Confirm Password\"\n                type=\"password\"\n                :adjust-position=\"false\"\n                :rules=\"[\n                  {\n                    required: true,\n                    message: 'please type your confirm password',\n                  },\n                ]\"\n              />\n            </view>\n          </view>\n          <view class=\"bottom_button\" @click=\"processPasswordChange\">\n            CONTINUE\n          </view>\n        </view>\n      </view>\n\n      <!-- Step 11: Password Changed Successfully -->\n      <view v-if=\"currentStep === 11\" class=\"footer_fakePopup\">\n        <view class=\"main_logo\">\n          <image\n            style=\"width: 100%\"\n            src=\"@/static/login/logo_white_background.png\"\n            mode=\"widthFix\"\n          />\n        </view>\n        <view class=\"control_container\">\n          <view class=\"first_line\">\n            You have changed your password successfully.\n          </view>\n          <view class=\"first_line\">\n            Please use new password to login next time.\n          </view>\n        </view>\n        <view class=\"control_container\">\n          <view class=\"bottom_button\" @click=\"proceedAfterPasswordChange\">\n            continue\n          </view>\n        </view>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script setup>\nimport { ref } from \"vue\" // 移除了未使用的 onMounted\nimport {\n  emsSend,\n  userRegister,\n  smsSend as apiSmsSend, // 重命名以避免冲突\n  indexBindMobile,\n  indexProfile,\n  indexChangepwd,\n  indexEmailLogin,\n  indexCheckMobile,\n  indexVerifyEmail,\n  indexGetEmailVerifyResult,\n} from \"@/api/totalApi.js\"\nimport {\n  useNavigate,\n  useSwitchTab,\n  flattenToNestedObject,\n} from \"@/hooks/useNavigate\"\nimport { useUserStore } from \"@/store/useUserStore\"\nimport { onLoad } from \"@dcloudio/uni-app\" // 显式导入 uni-app 的 onLoad\nimport { usePollingTask } from \"@/hooks/usePolling\" // 新增：引入轮询任务工具\n\nconst userStore = useUserStore()\n\nconst currentStep = ref(1) // 从步骤1开始\n\nconst registrationForm = ref({\n  email: \"\",\n  code: \"\", // 邮箱验证码\n  mobile: \"\",\n  smsCode: \"\", // 短信验证码，与邮箱的 'code' 不同\n  event: \"\", // 用于 API 调用，例如 smsSend\n  firstname: \"\",\n  lastname: \"\",\n  nickname: \"\",\n  password: \"\",\n  checkBox_termsAndConditions: false,\n  checkBox_privacyPolicy: false,\n})\n\nconst action = ref(\"\")\n\nconst changePasswordForm = ref({\n  // 用于更改密码的独立表单 (步骤 10)\n  password: \"\",\n  repassword: \"\",\n})\n\nconst handleClickBack = () => {\n  uni.navigateBack()\n}\n\n// 轮询任务\nconst { startTask, stopTask, onSuccess } = usePollingTask(\n  async () =>\n    await indexGetEmailVerifyResult({ email: registrationForm.value.email }),\n  1000,\n)\n\nonSuccess(async (response) => {\n  if (response.code != 200) {\n    return\n  }\n\n  if (!response.data) {\n    return\n  }\n\n  registrationForm.value.email = response.data.email\n  registrationForm.value.code = response.data.code\n  stopTask()\n\n  // 重置密码\n  if (action.value == \"reset\") {\n    if (registrationForm.value.email && registrationForm.value.code) {\n      // 邮箱登录\n      const r = await indexEmailLogin({\n        email: registrationForm.value.email,\n        code: registrationForm.value.code,\n      })\n\n      if (r.code != 200) {\n        useToast(r.msg)\n        navigateToStep(4)\n        return\n      }\n\n      const token = r.data.userinfo.token\n      // #ifdef H5\n      sessionStorage.setItem(\"token\", token)\n      // #endif\n\n      // 找回密码，要验证下手机号\n      navigateToStep(5)\n    }\n  }\n  // 注册\n  else {\n    await processEmailVerificationAndRegister()\n  }\n})\n\nconst fromSource = ref(null)\n\n/**\n * @description 页面加载时的处理函数，根据options参数处理深层链接和步骤跳转。\n * @param {object} options - 页面加载时传递的参数。\n */\nonLoad(async (options) => {\n  if (options.from) {\n    fromSource.value = options.from\n  }\n\n  const nestedObjectOptions = flattenToNestedObject(options || {})\n\n  if (options.action) {\n    action.value = options.action\n\n    if (action.value == \"reset\") {\n      await indexVerifyEmail({\n        email: nestedObjectOptions.email,\n        code: nestedObjectOptions.code,\n      })\n    }\n  }\n\n  // 邮箱认证，从邮箱点击\n  if (nestedObjectOptions?.email && nestedObjectOptions?.code) {\n    registrationForm.value.email = nestedObjectOptions.email\n    registrationForm.value.code = nestedObjectOptions.code\n\n    if (options.type && options.type == \"register\") {\n      const r = await indexVerifyEmail({\n        email: nestedObjectOptions.email,\n        code: nestedObjectOptions.code,\n      })\n\n      if (r.code != 200) {\n        useToast(r.msg || \"Verification failed. Please try again\")\n      } else {\n        useToast(\"Email verification successful\")\n        setTimeout(async () => {\n          await useRedirectTo(\"/pages/login/index\", {})\n        }, 1000)\n      }\n      return\n    }\n  }\n\n  // 原先的注册逻辑\n  //if (nestedObjectOptions?.email && nestedObjectOptions?.code) {\n  //  registrationForm.value.email = nestedObjectOptions.email\n  //  registrationForm.value.code = nestedObjectOptions.code\n  //  await processEmailVerificationAndRegister()\n  //}\n\n  // 通过深层链接跳转到特定步骤的逻辑，例如从邮箱验证链接跳转\n  if (nestedObjectOptions?.startStep) {\n    const step = parseInt(nestedObjectOptions.startStep, 10)\n    if (!isNaN(step) && step >= 1 && step <= 11) {\n      // 步骤号的基本验证\n      currentStep.value = step\n    }\n    // 如果其他步骤有数据，则预填充\n    if (nestedObjectOptions.email)\n      registrationForm.value.email = nestedObjectOptions.email\n    if (nestedObjectOptions.mobile)\n      registrationForm.value.mobile = nestedObjectOptions.mobile\n  }\n\n  // 如果直接加载步骤10 (例如将来从个人资料页)\n  // 并且用户未登录，则重定向到登录页。\n  // 这是基于 register10.vue 注释的预先检查。\n  if (currentStep.value === 10 && !userStore.isLogin) {\n    useToast(\"Please log in to change your password\")\n    setTimeout(() => {\n      useNavigate(\"/pages/login/index\")\n    }, 2000)\n  }\n})\n\nonUnload(() => {\n  // 组件卸载时停止轮询，确保刷新或离开页面后状态被重置\n  stopTask()\n  // #ifdef H5\n  sessionStorage.removeItem(\"token\")\n  // #endif\n})\n\n/**\n * @description 跳转到指定的注册步骤。\n * @param {number} stepNumber - 要跳转到的步骤号。\n */\nconst navigateToStep = (stepNumber) => {\n  currentStep.value = stepNumber\n}\n\n// 步骤1逻辑\n/**\n * @description 跳转到登录页面。\n */\nconst redirectToLogin = () => {\n  useNavigate(\"/pages/login/index\")\n}\n\n// 步骤2逻辑\n/**\n * @description 处理邮箱输入步骤的继续操作，验证邮箱格式并进入下一步。\n */\nconst proceedFromEmailInput = () => {\n  const pattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\n  if (registrationForm.value.email.trim() === \"\") {\n    useToast(\"Please enter your email address\")\n    return\n  }\n  if (!pattern.test(registrationForm.value.email)) {\n    useToast(\"Please enter a valid email address\")\n    return\n  }\n  navigateToStep(3) // 跳转到步骤3\n}\n\n// 步骤3逻辑\n/**\n * @description 发送邮箱验证码。\n */\nconst sendEmailVerificationCode = async () => {\n  // 确保每次发送邮件前都先停止可能存在的轮询任务，避免 isPolling 一直为 true\n  stopTask()\n\n  if (!registrationForm.value.email) {\n    // 确保邮箱可用\n    useToast(\n      \"The email address is missing. Please go back to the previous step.\",\n    )\n    navigateToStep(2)\n    return\n  }\n\n  // 重新启动轮询获取验证结果\n  await startTask()\n\n  const res_emsSend = await emsSend({\n    email: registrationForm.value.email,\n    event: action.value == \"reset\" ? \"login\" : \"register\",\n  })\n\n  if (res_emsSend.code === 101) {\n    // 邮箱已存在（注册场景），返回邮箱输入步骤，提示用户修改\n    stopTask()\n    useToast(res_emsSend.msg || \"Email already exists\")\n    navigateToStep(2)\n    return\n  }\n\n  if (res_emsSend.code != 200) {\n    // 其他错误，停止轮询并保持在当前(步骤 4) 方便用户查看提示\n    stopTask()\n    useToast(res_emsSend.msg || \"Failed to send the email\")\n    navigateToStep(4)\n    return\n  }\n  useToast(\"The email has been sent successfully\")\n  navigateToStep(4)\n  // showManualEmailCodeInputModal()\n}\n\n/**\n * @description 显示手动输入邮箱验证码的模态框 (临时方法)。\n */\nconst showManualEmailCodeInputModal = () => {\n  uni.showModal({\n    title: \"临时手动填写方式\",\n    content: \"请从验证邮件中输入您的邮箱验证码。\",\n    editable: true,\n    confirmText: \"确定\",\n    cancelText: \"取消\",\n    success: function (res) {\n      if (res.confirm && res.content) {\n        registrationForm.value.code = res.content\n        processEmailVerificationAndRegister()\n      } else if (res.cancel) {\n        console.log(\"用户取消了邮箱验证码输入\")\n      } else {\n        useToast(\"Please enter the verification code in your email\")\n      }\n    },\n  })\n}\n\n// 步骤4逻辑\n/**\n * @description 处理邮箱验证和用户注册逻辑。\n */\nconst processEmailVerificationAndRegister = async () => {\n  currentStep.value = 4\n  if (!registrationForm.value.email || !registrationForm.value.code) {\n    useToast(\n      \"The email address or verification code is missing. Please restart the process.\",\n    )\n    if (!registrationForm.value.email) navigateToStep(2)\n    //else if (!registrationForm.value.code) showManualEmailCodeInputModal()\n    return\n  }\n  const res_userRegister = await userRegister({\n    email: registrationForm.value.email,\n    code: registrationForm.value.code,\n  })\n  if (res_userRegister.code != 200) {\n    useToast(res_userRegister.msg || \"Failed to bind the email address\")\n    return\n  }\n\n  useToast(\"The account has been successfully registered\")\n  if (res_userRegister.data) {\n    // 检查数据是否存在\n    userStore.setUserInfo(res_userRegister.data.userinfo)\n  }\n\n  const token = res_userRegister.data?.userinfo?.token\n  // #ifdef H5\n  sessionStorage.setItem(\"token\", token)\n  // #endif\n\n  navigateToStep(5)\n}\n\n// 步骤5逻辑\n/**\n * @description 处理手机号输入步骤的继续操作，并进入下一步。\n */\nconst proceedFromMobileInput = () => {\n  if (!registrationForm.value.mobile) {\n    useToast(\"Please enter your mobile phone number\")\n    return\n  }\n  navigateToStep(6)\n}\n\nconst handleVerifyMobile = () => {\n  navigateToStep(8)\n  // 检测用户信息\n}\n\n// 步骤6逻辑\n/**\n * @description 请求发送短信验证码。\n */\nconst requestSmsVerificationCode = async () => {\n  // 原始注释: API需要登录(token)。这可能与新的注册流程冲突。\n  // 假设对于注册，短信的'bind'事件可能不需要token或由API处理。\n  if (!registrationForm.value.mobile) {\n    useToast(\"Mobile phone numbers are missing. Please go back.\")\n    navigateToStep(5)\n    return\n  }\n  registrationForm.value.event = action.value == \"reset\" ? \"check\" : \"bind\"\n\n  const res_smsSend = await apiSmsSend({\n    // 使用别名 apiSmsSend\n    mobile: registrationForm.value.mobile,\n    event: registrationForm.value.event,\n  })\n  if (res_smsSend.code != 200) {\n    useToast(res_smsSend.msg || \"Failed to send the SMS verification code\")\n    return\n  }\n  useToast(\"The SMS verification code was sent successfully\")\n  navigateToStep(7)\n}\n\n// 步骤7逻辑 (重新发送和验证)\n/**\n * @description 重新发送短信验证码。\n */\nconst resendSmsVerificationCode = async () => {\n  if (!registrationForm.value.mobile) {\n    useToast(\"Missing mobile phone number\")\n    return\n  }\n  registrationForm.value.event = \"bind\"\n  const res_smsSend = await apiSmsSend({\n    // 使用别名 apiSmsSend\n    mobile: registrationForm.value.mobile,\n    event: registrationForm.value.event,\n  })\n  if (res_smsSend.code != 200) {\n    useToast(res_smsSend.msg || \"Failed to send the SMS verification code\")\n    return\n  }\n  useToast(\"The SMS verification code was sent successfully\")\n}\n\n/**\n * @description 绑定用户手机号。\n */\nconst verifyAndBindMobile = async () => {\n  if (!registrationForm.value.mobile || !registrationForm.value.smsCode) {\n    useToast(\"The mobile phone number or SMS verification code is missing\")\n    return\n  }\n\n  // 如果是忘记密码的验证\n  if (action.value == \"reset\") {\n    const result = await indexCheckMobile({\n      mobile: registrationForm.value.mobile,\n      code: registrationForm.value.smsCode,\n    })\n\n    if (result.code != 200) {\n      useToast(\n        result.msg || \"The verification of the mobile phone number failed\",\n      )\n      return\n    }\n    navigateToStep(10)\n    return\n  }\n\n  registrationForm.value.event = \"bind\"\n  const res_indexBindMobile = await indexBindMobile({\n    mobile: registrationForm.value.mobile,\n    code: registrationForm.value.smsCode,\n    event: registrationForm.value.event,\n  })\n  if (res_indexBindMobile.code != 200) {\n    useToast(\n      res_indexBindMobile.msg ||\n        \"The mobile phone binding failed. Please try again\",\n    )\n    return\n  }\n  useToast(\"The mobile phone was bound successfully.\")\n  // 可选: 如果API返回包括手机在内的完整用户数据，则更新userStore\n  // if (res_indexBindMobile.data) userStore.setUserInfo(res_indexBindMobile.data);\n  navigateToStep(8)\n}\n\n// 步骤8逻辑\n/**\n * @description 修改并提交用户基本信息（姓名、昵称、密码）。\n */\nconst submitUserInfo = async () => {\n  // 假设用户在邮箱/手机验证后已\"登录\"或会话已建立。\n  if (\n    !registrationForm.value.firstname ||\n    !registrationForm.value.lastname ||\n    !registrationForm.value.nickname ||\n    !registrationForm.value.password\n  ) {\n    useToast(\"All fields are required\")\n    return false\n  }\n\n  const res_indexProfile = await indexProfile({\n    firstname: registrationForm.value.firstname,\n    lastname: registrationForm.value.lastname,\n    nickname: registrationForm.value.nickname,\n    password: registrationForm.value.password,\n    email: registrationForm.value.email, // 包含邮箱\n    mobile: registrationForm.value.mobile, // 包含手机\n  })\n  if (res_indexProfile.code != 200) {\n    useToast(res_indexProfile.msg || \"Failed to modify user information\")\n    return false\n  }\n  if (res_indexProfile.data) {\n    userStore.setUserInfo(res_indexProfile.data)\n  }\n  // #ifdef H5\n  const item = sessionStorage.getItem(\"token\")\n  userStore.setToken(item || res_indexProfile.data.token)\n  sessionStorage.removeItem(\"token\")\n  // #endif\n  return true\n}\n\n/**\n * @description 第八步点击continue时校验表单并跳转到第九步。\n */\nconst goToTermsStep = () => {\n  if (\n    !registrationForm.value.firstname ||\n    !registrationForm.value.lastname ||\n    !registrationForm.value.nickname ||\n    !registrationForm.value.password\n  ) {\n    useToast(\"All fields are required\")\n    return\n  }\n  navigateToStep(9)\n}\n\n// 步骤9逻辑\n/**\n * @description 处理创建账户的最后一步，先校验条款同意情况，再调用submitUserInfo，成功后跳转。\n */\nconst finalizeAccountCreation = async () => {\n  if (\n    !registrationForm.value.checkBox_termsAndConditions ||\n    !registrationForm.value.checkBox_privacyPolicy\n  ) {\n    useToast(\"Please agree to the terms and privacy policy\")\n    return\n  }\n  const res = await submitUserInfo()\n  if (res) {\n    useToast(\"Account created successfully!\")\n    userStore.onLogout()\n    // useSwitchTab(\"/pages/home/index\")\n  }\n}\n\n// 步骤10逻辑\n/**\n * @description 处理修改密码操作。\n */\nconst processPasswordChange = async () => {\n  let isLogin = userStore.isLogin\n  // #ifdef H5\n  const item = sessionStorage.getItem(\"token\")\n  if (item) {\n    isLogin = true\n  }\n  // #endif\n\n  if (!isLogin) {\n    useToast(\n      \"You must log in to change your password. This step is usually accessed from the user's profile.\",\n    )\n    setTimeout(() => {\n      useNavigate(\"/pages/login/index\")\n    }, 3000)\n    return\n  }\n  if (\n    !changePasswordForm.value.password ||\n    !changePasswordForm.value.repassword\n  ) {\n    useToast(\"Please enter and confirm your new password.\")\n    return\n  }\n  if (\n    changePasswordForm.value.password !== changePasswordForm.value.repassword\n  ) {\n    useToast(\"Password mismatch\")\n    return\n  }\n\n  const res_indexChangepwd = await indexChangepwd({\n    password: changePasswordForm.value.password,\n    repassword: changePasswordForm.value.repassword,\n  })\n  if (res_indexChangepwd.code != 200) {\n    useToast(res_indexChangepwd.msg || \"Failed to modify the password\")\n    return\n  }\n  useToast(\"The password was modified successfully.\")\n  userStore.clearUserInfo()\n  // #ifdef H5\n  sessionStorage.removeItem(\"token\")\n  // #endif\n  navigateToStep(11)\n}\n\n// 步骤11逻辑\n/**\n * @description 处理密码成功更改后的继续操作，跳转到登录页。\n */\nconst proceedAfterPasswordChange = () => {\n  useNavigate(\"/pages/login/index\")\n}\n\nconst handleClickRichText = (type) => {\n  useNavigate(\"/pages/richtext/index\", {\n    type: type,\n  })\n}\n\n/**\n * @description 重新发送流程：清理旧状态并返回邮箱输入步骤。\n */\nconst handleResendRequest = () => {\n  stopTask() // 停止轮询\n  registrationForm.value.email = \"\"\n  registrationForm.value.code = \"\"\n  navigateToStep(2) // 返回填写邮箱\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  width: 100%;\n  min-height: 100vh;\n  max-height: 100vh;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: rgb(35, 85, 151);\n\n  .content {\n    position: relative;\n    width: 100%;\n    //padding-top: 160rpx;\n    box-sizing: border-box;\n\n    .header {\n      padding: 80rpx 32rpx;\n    }\n  }\n}\n\n.footer_fakePopup {\n  width: 100%;\n  height: calc(100vh - 160rpx);\n  padding: 58px 28px;\n  box-sizing: border-box;\n  background-color: rgb(240, 237, 234);\n  border-radius: 30px 30px 0 0;\n  overflow: auto;\n  z-index: 3;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  .control_container {\n    padding-left: 34rpx;\n    padding-right: 34rpx;\n    box-sizing: border-box;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    flex-grow: 1;\n  }\n}\n\n.main_logo {\n  width: 526rpx;\n  height: 106rpx;\n  z-index: 2;\n  margin-bottom: 20px;\n}\n\n.topText {\n  margin-top: 30px;\n  width: auto;\n  height: auto;\n\n  font-size: 24px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: normal;\n  color: #909399;\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.centerButton {\n  margin-top: 30px;\n  width: 253px;\n  height: 50px;\n  border-radius: 12px;\n  background: #069db2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n\n  font-size: 16px;\n  font-weight: 500;\n}\n\n.bottomInfo {\n  width: auto;\n  height: auto;\n  margin-top: auto;\n  padding-top: 20px;\n  padding-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  font-size: 12px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: normal;\n  color: #3d3d3d;\n  text-align: center;\n}\n\n.first_line {\n  margin-top: 15px;\n  font-size: 20px;\n  font-weight: 900;\n  line-height: normal;\n  letter-spacing: normal;\n  color: #00569c;\n  width: 100%;\n}\n\n.second_line {\n  margin-top: 15px;\n\n  font-size: 16px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: normal;\n  color: #a5a4a9;\n  display: flex;\n  align-items: flex-start;\n  width: 100%;\n}\n\n.third_line {\n  margin-top: 6px;\n\n  font-size: 16px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: normal;\n  color: #a5a4a9;\n  width: 100%;\n}\n\n.email_input_area {\n  margin-top: 20px;\n  width: 100%;\n\n  .label {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: normal;\n    letter-spacing: normal;\n    color: #00569c;\n    display: block;\n    margin-bottom: 8px;\n  }\n\n  &.step-7-label .label,\n  &.step-8-label .label,\n  &.step-10-label .label {\n    font-size: 20px;\n    font-weight: 900;\n  }\n\n  .input_content {\n    margin-bottom: 10px;\n\n    .customWdInput {\n      width: 100%;\n      height: 46px;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 12px;\n      box-sizing: border-box;\n      border-radius: 4px;\n      background-color: rgb(240, 237, 234);\n      border: 2px solid rgb(35, 85, 151);\n      margin-bottom: 10px;\n\n      &:last-child {\n        margin-bottom: 0;\n      }\n\n      :deep() {\n        .wd-input__inner {\n          font-size: 16px;\n        }\n\n        .wd-icon {\n          background-color: rgb(240, 237, 234);\n          color: rgb(70, 155, 175);\n          font-weight: 500;\n          font-size: 22px;\n        }\n      }\n    }\n  }\n}\n\n.bottom_button {\n  width: 100%;\n  height: 50px;\n  border-radius: 12px;\n  background: #069db2;\n\n  font-size: 16px;\n  font-weight: 500;\n  line-height: normal;\n  text-align: center;\n  letter-spacing: normal;\n  color: #ffffff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  margin-top: 20px;\n}\n\n.footer_fakePopup .control_container > .bottom_button.push-bottom {\n  margin-top: auto;\n  margin-bottom: 0;\n  padding-top: 20px;\n}\n\n.bottom_container {\n  margin-top: auto;\n  padding-top: 20px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  .desc_title {\n    margin-bottom: 10px;\n    font-size: 12px;\n    font-weight: 500;\n    line-height: normal;\n    letter-spacing: normal;\n    color: #3d3d3d;\n    text-wrap: nowrap;\n  }\n\n  .bottom_button {\n    margin-top: 10px;\n    margin-bottom: 10px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\n\n:deep(.wd-checkbox) {\n  visibility: visible !important;\n  z-index: 1000;\n}\n\n.footer_fakePopup .control_container .second_line > view {\n  margin-left: 8px;\n}\n</style>\n"],"names":["CHECKBOX_GROUP_KEY","Symbol","__spreadValues","baseProps","checkboxProps","__spreadProps","customLabelClass","makeStringProp","customShapeClass","modelValue","type","String","Number","Boolean","required","default","shape","checkedColor","disabled","trueValue","falseValue","size","maxWidth","name","options","addGlobalClass","virtualHost","styleIsolation","props","__props","emit","__emit","__expose","toggle","parent","checkboxGroup","index","useParent","isChecked","computed","indexOf","isFirst","value","isLast","children","isDef","length","proxy","getCurrentInstance","watch","forEach","child","$","uid","console","error","newValue","toString","innerShape","getPropByPath","innerCheckedColor","innerDisabled","max","min","innerInline","innerCell","innerSize","changeSelectState","newVal","onBeforeMount","userStore","useUserStore","currentStep","ref","registrationForm","email","code","mobile","smsCode","event","firstname","lastname","nickname","password","checkBox_termsAndConditions","checkBox_privacyPolicy","action","changePasswordForm","repassword","handleClickBack","uni.navigateBack","startTask","stopTask","onSuccess","usePollingTask","__async","this","indexGetEmailVerifyResult","response","data","r","indexEmailLogin","useToast","msg","navigateToStep","token","userinfo","sessionStorage","setItem","processEmailVerificationAndRegister","fromSource","onLoad","from","nestedObjectOptions","flattenToNestedObject","indexVerifyEmail","setTimeout","useRedirectTo","startStep","step","parseInt","isNaN","isLogin","useNavigate","onUnload","removeItem","stepNumber","redirectToLogin","proceedFromEmailInput","trim","test","sendEmailVerificationCode","res_emsSend","emsSend","res_userRegister","userRegister","setUserInfo","_b","_a","handleVerifyMobile","requestSmsVerificationCode","res_smsSend","apiSmsSend","resendSmsVerificationCode","verifyAndBindMobile","result","indexCheckMobile","res_indexBindMobile","indexBindMobile","submitUserInfo","res_indexProfile","indexProfile","item","getItem","setToken","goToTermsStep","finalizeAccountCreation","onLogout","processPasswordChange","res_indexChangepwd","indexChangepwd","clearUserInfo","proceedAfterPasswordChange","handleClickRichText","handleResendRequest"],"mappings":"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"}