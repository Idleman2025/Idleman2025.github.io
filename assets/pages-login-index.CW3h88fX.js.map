{"version":3,"file":"pages-login-index.CW3h88fX.js","sources":["../../../../src/static/APP/logo.png","../../../../src/pages/login/components/loginForm.vue","../../../../src/pages/login/index.vue"],"sourcesContent":["export default \"__VITE_ASSET__DacSPZ0B__\"","<template>\n  <view class=\"cont\">\n    <wd-form ref=\"login_form_ref\" :model=\"login_form\">\n      <!-- 邮箱输入部分 -->\n      <view class=\"input-group\">\n        <text class=\"label\">Email</text>\n        <view class=\"input_content\">\n          <wd-input\n            custom-class=\"customWdInput\"\n            prop=\"account\"\n            v-model=\"login_form.account\"\n            placeholder=\"example@example.com\"\n            :rules=\"[\n              {\n                required: true,\n                pattern: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                message: 'please enter a valid email address',\n              },\n            ]\"\n          />\n        </view>\n      </view>\n\n      <!-- 密码输入部分 -->\n      <view class=\"input-group\">\n        <view class=\"input_content\">\n          <wd-input\n            custom-class=\"customWdInput\"\n            prop=\"password\"\n            v-model=\"login_form.password\"\n            prefix-icon=\"lock-on\"\n            show-password\n            placeholder=\"Password\"\n            :rules=\"[\n              {\n                required: true,\n                message: 'please enter your password',\n              },\n            ]\"\n          />\n        </view>\n      </view>\n\n      <!-- 记住我 & 忘记密码 -->\n      <view class=\"action-row\">\n        <label class=\"remember-me\">\n          <checkbox\n            :checked=\"rememberMe\"\n            @change=\"rememberMe = !rememberMe\"\n            color=\"rgb(70,155,175)\"\n          />\n          <text>Remember me</text>\n        </label>\n        <text\n          class=\"forgot-password\"\n          @click=\"\n            useNavigate('/pages/register/index', {\n              startStep: 2,\n              action: 'reset'\n            })\n          \"\n        >\n          Forgot Password\n        </text>\n      </view>\n\n      <!-- 登录按钮 -->\n      <!-- <button\n        class=\"class\"\n        @submit=\"handleLogin\"\n        :style=\"{ backgroundColor: 'rgb(70,155,175)' }\"\n      >\n        LOGIN\n      </button> -->\n      <wd-button\n        custom-class=\"login-btn\"\n        custom-style=\"backgroundColor: rgb(70,155,175)\"\n        type=\"primary\"\n        size=\"large\"\n        @click=\"handleLogin\"\n        block\n        >LOGIN\n      </wd-button>\n    </wd-form>\n\n    <!-- 底部注册链接 -->\n    <view class=\"footer\" @click=\"jumpRegisterPage\">\n      <text class=\"footer-text\">Don't have account?</text>\n      <text class=\"create-account\">Create a new account</text>\n    </view>\n  </view>\n</template>\n\n<script setup>\n// 导入 登录接口（必需）\nimport { userLogin } from \"@/api/totalApi.js\"\n// 导入 普通页面导航、tabbar导航、路由参数转化对象方法（必需）\nimport {\n  useNavigate,\n  useSwitchTab,\n  flattenToNestedObject,\n} from \"@/hooks/useNavigate\"\n// 导入用户信息状态库\nimport { useUserStore } from \"@/store/useUserStore.js\"\n\nconst userStore = useUserStore()\n\n// ------------------- 页面数据 ----------------------\n\nconst login_form_ref = ref(null)\n\nconst login_form = ref({\n  account: \"\",\n  password: \"\",\n})\n\nconst rememberMe = ref(false)\n\n// 登录功能\nconst handleLogin = () => {\n  login_form_ref.value\n    .validate()\n    .then(async ({ valid, errors }) => {\n      if (valid) {\n        // 调用登录接口\n        const res = await userLogin(login_form.value)\n        if (res.code != 200) {\n          useToast(res.msg)\n          return\n        }\n\n        // 登录成功，保存登录信息，跳转到首页\n        userStore.setUserInfo(res.data.userinfo)\n\n        // TODO （方便测试，先注释下面代码） 检查用户是否已经绑定手机号，如果未绑定，跳转到绑定手机号页面\n        // if (!userStore.userInfo.mobile) {\n        //   useToast(\n        //     \"You haven't bound your phone number yet. Please bind your phone number first.\",\n        //   )\n        //   setTimeout(() => {\n        //     useNavigate(\"/pages/register/index\", {\n        //       startStep: 5,\n        //     })\n        //   }, 3000)\n        //   return\n        // }\n\n        // 已经有手机号了，直接跳转到首页\n        useSwitchTab(\"/pages/home/index\")\n      }\n    })\n    .catch((error) => {\n      console.log(error, \"error\")\n    })\n}\n\n// 跳转注册页面\nconst jumpRegisterPage = () => {\n  useNavigate(\"/pages/register/index\")\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.cont {\n  width: 100%;\n  height: 462px;\n  padding: 54px;\n  box-sizing: border-box;\n  background-color: #f5f5dc;\n}\n\n// 邮箱输入部分 和 密码输入部分\n.input-group {\n  width: 100%;\n\n  // 输入框标题\n  .label {\n    font-size: 26rpx;\n    color: rgb(70, 155, 175);\n    margin-bottom: 2px;\n    display: block;\n  }\n\n  // 整一个大框，配置内容\n  .input_content {\n    // display: flex;\n    // justify-content: space-between; // 左右对齐;\n    // align-items: center;\n    margin-bottom: 20px;\n\n    .customWdInput {\n      width: 100%; // 宽度100%;\n      height: 46px;\n      display: flex;\n      justify-content: space-between; // 左右对齐\n      align-items: center;\n      padding: 12px;\n      box-sizing: border-box;\n      border-radius: 4px;\n      background-color: #f5f5dc;\n      border: 2px solid rgb(35, 85, 151);\n      position: relative;\n\n      :deep() {\n        .wd-input__error-message {\n          position: absolute;\n          bottom: -20px;\n        }\n\n        .wd-icon {\n          background-color: #f5f5dc;\n          color: rgb(70, 155, 175);\n          font-weight: 500;\n          font-size: 22px;\n        }\n      }\n    }\n  }\n}\n\n// 记住我 & 忘记密码\n.action-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  //   margin: 40rpx 0;\n  .remember-me {\n    display: flex;\n    align-items: center;\n    font-size: 26rpx;\n    color: rgb(70, 155, 175);\n\n    checkbox {\n      margin-right: 2px;\n    }\n  }\n\n  .forgot-password {\n    color: rgb(70, 155, 175);\n    font-size: 26rpx;\n  }\n}\n\n// 登录按钮\n.login-btn {\n  height: 50px;\n  line-height: 50px;\n  color: #fff;\n  font-size: 32rpx;\n  border-radius: 50rpx;\n  margin: 40px 0;\n}\n\n// 底部注册链接\n.footer {\n  text-align: center;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  .footer-text {\n    flex: 1;\n    color: rgb(70, 155, 175);\n    font-size: 14px;\n    padding-right: 20px;\n    text-wrap: nowrap;\n  }\n\n  .create-account {\n    flex: 1;\n    color: rgb(70, 155, 175);\n    font-size: 14px;\n    font-weight: 500;\n    text-wrap: nowrap;\n  }\n}\n\n.placeholder {\n  color: #999;\n}\n</style>\n","<template>\n  <!-- 页面内容容器（必需） -->\n  <view class=\"container\">\n    <wd-toast />\n    <!-- 页面内容 -->\n    <view class=\"content\">\n      <!--在这里编写页面主体内容-->\n      <!-- 蓝色logo -->\n      <view class=\"main_logo\">\n        <image\n          style=\"width: 100%\"\n          src=\"@/static/APP/logo.png\"\n          mode=\"widthFix\"\n        />\n      </view>\n\n      <!-- 底部内容区域 -->\n      <view class=\"footer_fakePopup\">\n        <LoginForm />\n      </view>\n    </view>\n  </view>\n</template>\n<script setup>\nimport {\n  useNavigate,\n  useSwitchTab,\n  flattenToNestedObject,\n} from \"@/hooks/useNavigate\" // 页面导航、tabbar导航、路由参数转化对象方法（必需）\n\n// 导入所需子组件\nimport LoginForm from \"./components/loginForm.vue\"\n\n// ================== 路由跳转相关 ==================\n\nconst userStore = useUserStore()\n\n// 简单的返回上一级页面，使用uni.navigateBack\nconst handleClickLeft = () => {\n  uni.navigateBack()\n}\n\nonLoad(() => {\n  if (userStore.isLogin) {\n    useSwitchTab(\"/pages/home/index\")\n  }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n// 页面容器（必需）\n.container {\n  width: 100%;\n  min-height: 100vh;\n  box-sizing: border-box; // 若页面涉及padding，统一在padding后续上：box-sizing: border-box;\n\n  // 建议的flex布局（可选）\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  background-color: #00569C;\n}\n\n// 页面内容\n.content {\n  position: relative;\n  width: 100%;\n  min-height: 100vh;\n  // padding: 12px; // (可选，建议用padding去挤占子内容)\n  box-sizing: border-box;\n}\n\n// 蓝色logo\n.main_logo {\n  position: absolute;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 366px;\n  height: 303px;\n  z-index: 2;\n}\n\n// 底部内容区域\n.footer_fakePopup {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n\n  width: 100%;\n  max-height: 780px;\n  height: auto;\n  background-color: rgb(240, 237, 234);\n  border-radius: 30px 30px 0 0;\n  overflow: hidden;\n  z-index: 3;\n}\n</style>\n"],"names":["_imports_0","URL","url","href","userStore","useUserStore","login_form_ref","ref","login_form","account","password","rememberMe","handleLogin","value","validate","then","_0","__async","this","valid","errors","res","userLogin","code","useToast","msg","setUserInfo","data","userinfo","useSwitchTab","catch","error","console","log","jumpRegisterPage","useNavigate","onLoad","isLogin"],"mappings":"kkBAAA,MAAAA,EAAe,GAAA,IAAAC,IAAA,gCAAAC,KAAAC,sCCyGf,MAAMC,EAAYC,IAIZC,EAAiBC,EAAI,MAErBC,EAAaD,EAAI,CACrBE,QAAS,GACTC,SAAU,KAGNC,EAAaJ,GAAI,GAGjBK,EAAc,KAClBN,EAAeO,MACZC,WACAC,KAAYC,IAAsBC,SAAAC,OAAA,CAAtBF,KAAsB,WAAtBG,MAAEA,EAAAC,OAAOA,IACpB,GAAID,EAAO,CAET,MAAME,QAAYC,EAAUd,EAAWK,OACvC,GAAgB,KAAZQ,EAAIE,KAEN,YADAC,EAASH,EAAII,KAKfrB,EAAUsB,YAAYL,EAAIM,KAAKC,UAgB/BC,EAAa,oBACrB,CACA,4MACKC,MAAOC,IACNC,QAAQC,IAAIF,EAAO,YAKnBG,EAAmB,KACvBC,EAAY,u7DC3Hd,MAAM/B,EAAYC,WAOlB+B,EAAO,KACDhC,EAAUiC,SACZR,EAAa"}