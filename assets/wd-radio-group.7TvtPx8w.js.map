{"version":3,"file":"wd-radio-group.7TvtPx8w.js","sources":["../../../../src/uni_modules/wot-design-uni/components/wd-radio-group/types.ts","../../../../src/uni_modules/wot-design-uni/components/wd-radio/types.ts","../../../../src/uni_modules/wot-design-uni/components/wd-radio/wd-radio.vue","../../../../src/uni_modules/wot-design-uni/components/wd-radio-group/wd-radio-group.vue"],"sourcesContent":["import { type InjectionKey } from 'vue'\nimport type { RadioShape, RadioIconPlacement } from '../wd-radio/types'\nimport { baseProps, makeBooleanProp, makeStringProp } from '../common/props'\n\nexport type RadioGroupProvide = {\n  props: {\n    modelValue?: string | number | boolean\n    shape?: RadioShape\n    checkedColor?: string\n    disabled?: boolean\n    cell?: boolean\n    size?: string\n    inline?: boolean\n    iconPlacement?: RadioIconPlacement\n  }\n  updateValue: (value: string | number | boolean) => void\n}\n\nexport const RADIO_GROUP_KEY: InjectionKey<RadioGroupProvide> = Symbol('wd-radio-group')\n\nexport const radioGroupProps = {\n  ...baseProps,\n  /** 会自动选中value对应的单选框 */\n  modelValue: [String, Number, Boolean],\n  /** 单选框形状，可选值为 dot / button / check，默认为 check */\n  shape: makeStringProp<RadioShape>('check'),\n  /** 选中的颜色，默认为 #4D80F0 */\n  checkedColor: String,\n  /** 是否禁用，默认为 false */\n  disabled: makeBooleanProp(false),\n  /** 表单模式，默认为 false */\n  cell: makeBooleanProp(false),\n  /** 设置大小，默认为空 */\n  size: makeStringProp(''),\n  /** 同行展示，默认为 false */\n  inline: makeBooleanProp(false),\n  /** 图标位置，默认为 left */\n  iconPlacement: makeStringProp<RadioIconPlacement>('auto')\n}\n","/*\n * @Author: weisheng\n * @Date: 2024-03-15 20:40:34\n * @LastEditTime: 2024-12-07 18:52:34\n * @LastEditors: weisheng\n * @Description:\n * @FilePath: /wot-design-uni/src/uni_modules/wot-design-uni/components/wd-radio/types.ts\n * 记得注释\n */\nimport type { PropType } from 'vue'\nimport { baseProps, makeRequiredProp, makeStringProp } from '../common/props'\n\nexport type RadioShape = 'dot' | 'button' | 'check'\n\nexport type RadioIconPlacement = 'left' | 'right' | 'auto'\n\nexport const radioProps = {\n  ...baseProps,\n  /** 选中时的值 */\n  value: makeRequiredProp([String, Number, Boolean]),\n  /** 单选框的形状 */\n  shape: String as PropType<RadioShape>,\n  /** 选中的颜色 */\n  checkedColor: String,\n  /** 禁用 */\n  disabled: {\n    type: [Boolean, null] as PropType<boolean | null>,\n    default: null\n  },\n  /** 单元格 */\n  cell: {\n    type: [Boolean, null] as PropType<boolean | null>,\n    default: null\n  },\n  /** 大小 */\n  size: String,\n  /** 内联 */\n  inline: {\n    type: [Boolean, null] as PropType<boolean | null>,\n    default: null\n  },\n  /** 最大宽度 */\n  maxWidth: String,\n  /**\n   * 图标位置\n   * 可选值: 'left' | 'right' | 'auto'\n   */\n  iconPlacement: {\n    type: String as PropType<RadioIconPlacement>\n  }\n}\n","<template>\n  <view\n    :class=\"`wd-radio ${cellValue ? 'is-cell-radio' : ''} ${cellValue && shapeValue == 'button' ? 'is-button-radio' : ''} ${\n      sizeValue ? 'is-' + sizeValue : ''\n    } ${inlineValue ? 'is-inline' : ''} ${isChecked ? 'is-checked' : ''} ${shapeValue !== 'check' ? 'is-' + shapeValue : ''} ${\n      disabledValue ? 'is-disabled' : ''\n    } icon-placement-${iconPlacement} ${customClass}`\"\n    :style=\"customStyle\"\n    @click=\"handleClick\"\n  >\n    <view\n      class=\"wd-radio__label\"\n      :style=\"`${maxWidth ? 'max-width:' + maxWidth : ''};  ${\n        isChecked && shapeValue === 'button' && !disabledValue ? 'color :' + checkedColorValue : ''\n      }`\"\n    >\n      <slot></slot>\n    </view>\n    <view class=\"wd-radio__shape\" :style=\"isChecked && !disabledValue ? 'color: ' + checkedColorValue : ''\">\n      <wd-icon v-if=\"shapeValue === 'check'\" :style=\"isChecked && !disabledValue ? 'color: ' + checkedColorValue : ''\" name=\"check\"></wd-icon>\n    </view>\n  </view>\n</template>\n<script lang=\"ts\">\nexport default {\n  name: 'wd-radio',\n  options: {\n    virtualHost: true,\n    addGlobalClass: true,\n    styleIsolation: 'shared'\n  }\n}\n</script>\n<script lang=\"ts\" setup>\nimport wdIcon from '../wd-icon/wd-icon.vue'\nimport { computed, watch } from 'vue'\nimport { useParent } from '../composables/useParent'\nimport { RADIO_GROUP_KEY } from '../wd-radio-group/types'\nimport { radioProps, type RadioIconPlacement } from './types'\nimport { getPropByPath, isDef } from '../common/util'\n\nconst props = defineProps(radioProps)\n\nconst { parent: radioGroup } = useParent(RADIO_GROUP_KEY)\n\nconst isChecked = computed(() => {\n  if (radioGroup) {\n    return props.value === radioGroup.props.modelValue\n  } else {\n    return false\n  }\n})\n\nconst shapeValue = computed(() => {\n  return props.shape || getPropByPath(radioGroup, 'props.shape')\n})\n\nconst checkedColorValue = computed(() => {\n  return props.checkedColor || getPropByPath(radioGroup, 'props.checkedColor')\n})\n\nconst disabledValue = computed(() => {\n  if (isDef(props.disabled)) {\n    return props.disabled\n  } else {\n    return getPropByPath(radioGroup, 'props.disabled')\n  }\n})\n\nconst inlineValue = computed(() => {\n  if (isDef(props.inline)) {\n    return props.inline\n  } else {\n    return getPropByPath(radioGroup, 'props.inline')\n  }\n})\n\nconst sizeValue = computed(() => {\n  return props.size || getPropByPath(radioGroup, 'props.size')\n})\n\nconst cellValue = computed(() => {\n  if (isDef(props.cell)) {\n    return props.cell\n  } else {\n    return getPropByPath(radioGroup, 'props.cell')\n  }\n})\n\nconst iconPlacement = computed<RadioIconPlacement>(() => {\n  if (isDef(props.iconPlacement)) {\n    return props.iconPlacement\n  } else {\n    return getPropByPath(radioGroup, 'props.iconPlacement')\n  }\n})\n\nwatch(\n  () => props.shape,\n  (newValue) => {\n    const type = ['check', 'dot', 'button']\n    if (!newValue || type.indexOf(newValue) === -1) console.error(`shape must be one of ${type.toString()}`)\n  }\n)\n\n/**\n * 点击子元素，通知父元素触发change事件\n */\nfunction handleClick() {\n  const { value } = props\n  if (!disabledValue.value && radioGroup && isDef(value)) {\n    radioGroup.updateValue(value)\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n@import './index.scss';\n</style>\n","<template>\n  <view :class=\"`wd-radio-group  ${customClass} ${cell && shape === 'button' ? 'is-button' : ''}`\" :style=\"customStyle\">\n    <slot />\n  </view>\n</template>\n<script lang=\"ts\">\nexport default {\n  name: 'wd-radio-group',\n  options: {\n    virtualHost: true,\n    addGlobalClass: true,\n    styleIsolation: 'shared'\n  }\n}\n</script>\n\n<script lang=\"ts\" setup>\nimport { watch } from 'vue'\nimport { useChildren } from '../composables/useChildren'\nimport { RADIO_GROUP_KEY, radioGroupProps } from './types'\n\nconst props = defineProps(radioGroupProps)\nconst emit = defineEmits(['change', 'update:modelValue'])\n\nconst { linkChildren, children } = useChildren(RADIO_GROUP_KEY)\n\nlinkChildren({ props, updateValue })\n\nwatch(\n  () => props.shape,\n  (newValue) => {\n    // type: 'dot', 'button', 'check'\n    const type = ['check', 'dot', 'button']\n    if (type.indexOf(newValue) === -1) console.error(`shape must be one of ${type.toString()}`)\n  },\n  { deep: true, immediate: true }\n)\n\n/**\n * @description 处理radio子节点通知\n */\nfunction updateValue(value: string | number | boolean) {\n  emit('update:modelValue', value)\n  emit('change', {\n    value\n  })\n}\n</script>\n<style lang=\"scss\" scoped>\n@import './index.scss';\n</style>\n"],"names":["RADIO_GROUP_KEY","Symbol","radioGroupProps","__spreadProps","baseProps","modelValue","String","Number","Boolean","shape","makeStringProp","checkedColor","disabled","makeBooleanProp","cell","size","inline","iconPlacement","radioProps","value","makeRequiredProp","type","default","maxWidth","name","options","virtualHost","addGlobalClass","styleIsolation","props","__props","parent","radioGroup","useParent","isChecked","computed","shapeValue","getPropByPath","checkedColorValue","disabledValue","isDef","inlineValue","sizeValue","cellValue","handleClick","updateValue","watch","newValue","indexOf","console","error","toString","emit","__emit","linkChildren","useChildren","deep","immediate"],"mappings":"mqBAkBO,MAAMA,EAAmDC,OAAO,kBAE1DC,EAAkBC,OAC1BC,GAD0B,CAG7BC,WAAY,CAACC,OAAQC,OAAQC,SAE7BC,MAAOC,EAA2B,SAElCC,aAAcL,OAEdM,SAAUC,GAAgB,GAE1BC,KAAMD,GAAgB,GAEtBE,KAAML,EAAe,IAErBM,OAAQH,GAAgB,GAExBI,cAAeP,EAAmC,UCrBvCQ,EAAaf,OACrBC,GADqB,CAGxBe,MAAOC,EAAiB,CAACd,OAAQC,OAAQC,UAEzCC,MAAOH,OAEPK,aAAcL,OAEdM,SAAU,CACRS,KAAM,CAACb,QAAS,MAChBc,QAAS,MAGXR,KAAM,CACJO,KAAM,CAACb,QAAS,MAChBc,QAAS,MAGXP,KAAMT,OAENU,OAAQ,CACNK,KAAM,CAACb,QAAS,MAChBc,QAAS,MAGXC,SAAUjB,OAKVW,cAAe,CACbI,KAAMf,uBCxBK,CACbkB,KAAM,WACNC,QAAS,CACPC,aAAa,EACbC,gBAAgB,EAChBC,eAAgB,8BAYpB,MAAMC,EAAQC,GAENC,OAAQC,GAAeC,EAAUjC,GAEnCkC,EAAYC,EAAS,MACrBH,GACKH,EAAMV,QAAUa,EAAWH,MAAMxB,YAMtC+B,EAAaD,EAAS,IACnBN,EAAMpB,OAAS4B,EAAcL,EAAY,gBAG5CM,EAAoBH,EAAS,IAC1BN,EAAMlB,cAAgB0B,EAAcL,EAAY,uBAGnDO,EAAgBJ,EAAS,IACzBK,EAAMX,EAAMjB,UACPiB,EAAMjB,SAENyB,EAAcL,EAAY,mBAI/BS,EAAcN,EAAS,IACvBK,EAAMX,EAAMb,QACPa,EAAMb,OAENqB,EAAcL,EAAY,iBAI/BU,EAAYP,EAAS,IAClBN,EAAMd,MAAQsB,EAAcL,EAAY,eAG3CW,EAAYR,EAAS,IACrBK,EAAMX,EAAMf,MACPe,EAAMf,KAENuB,EAAcL,EAAY,eAI/Bf,EAAgBkB,EAA6B,IAC7CK,EAAMX,EAAMZ,eACPY,EAAMZ,cAENoB,EAAcL,EAAY,wBAerC,SAASY,IACP,MAAMzB,MAAEA,GAAUU,GACbU,EAAcpB,OAASa,GAAcQ,EAAMrB,IAC9Ca,EAAWa,YAAY1B,EACzB,QAfF2B,EACE,IAAMjB,EAAMpB,MACXsC,IACC,MAAM1B,EAAO,CAAC,QAAS,MAAO,UACzB0B,IAAuC,IAA3B1B,EAAK2B,QAAQD,IAAkBE,QAAQC,MAAM,wBAAwB7B,EAAK8B,+5BC/FhF,CACb3B,KAAM,iBACNC,QAAS,CACPC,aAAa,EACbC,gBAAgB,EAChBC,eAAgB,4EAUpB,MAAMC,EAAQC,EACRsB,EAAOC,GAEPC,aAAEA,GAA2BC,EAAYvD,UAE/CsD,EAAa,CAAEzB,QAAOgB,YAetB,SAAqB1B,GACnBiC,EAAK,oBAAqBjC,GAC1BiC,EAAK,SAAU,CACbjC,SACD,IAjBH2B,EACE,IAAMjB,EAAMpB,MACXsC,IAEC,MAAM1B,EAAO,CAAC,QAAS,MAAO,WACC,IAA3BA,EAAK2B,QAAQD,IAAkBE,QAAQC,MAAM,wBAAwB7B,EAAK8B,eAEhF,CAAEK,MAAM,EAAMC,WAAW"}