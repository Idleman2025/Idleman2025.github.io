{"version":3,"file":"useParent.B1gYIzoG.js","sources":["../../../../src/uni_modules/wot-design-uni/components/composables/useParent.ts"],"sourcesContent":["import {\n  ref,\n  inject,\n  computed,\n  onUnmounted,\n  type InjectionKey,\n  getCurrentInstance,\n  type ComponentPublicInstance,\n  type ComponentInternalInstance\n} from 'vue'\n\ntype ParentProvide<T> = T & {\n  link(child: ComponentInternalInstance): void\n  unlink(child: ComponentInternalInstance): void\n  children: ComponentPublicInstance[]\n  internalChildren: ComponentInternalInstance[]\n}\n\nexport function useParent<T>(key: InjectionKey<ParentProvide<T>>) {\n  const parent = inject(key, null)\n\n  if (parent) {\n    const instance = getCurrentInstance()!\n    const { link, unlink, internalChildren } = parent\n\n    link(instance)\n    onUnmounted(() => unlink(instance))\n\n    const index = computed(() => internalChildren.indexOf(instance))\n\n    return {\n      parent,\n      index\n    }\n  }\n\n  return {\n    parent: null,\n    index: ref(-1)\n  }\n}\n"],"names":["useParent","key","parent","inject","instance","getCurrentInstance","link","unlink","internalChildren","onUnmounted","index","computed","indexOf","ref"],"mappings":"sEAkBO,SAASA,EAAaC,GAC3B,MAAMC,EAASC,EAAOF,EAAK,MAE3B,GAAIC,EAAQ,CACV,MAAME,EAAWC,KACXC,KAAEA,EAAAC,OAAMA,EAAAC,iBAAQA,GAAqBN,EAE3CI,EAAKF,GACLK,EAAY,IAAMF,EAAOH,IAIzB,MAAO,CACLF,SACAQ,MAJYC,EAAS,IAAMH,EAAiBI,QAAQR,IAKtD,CAGF,MAAO,CACLF,OAAQ,KACRQ,MAAOG,GAAI,GAEf"}