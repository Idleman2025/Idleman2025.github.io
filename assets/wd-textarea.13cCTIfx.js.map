{"version":3,"file":"wd-textarea.13cCTIfx.js","sources":["../../../../src/uni_modules/wot-design-uni/components/wd-cell-group/wd-cell-group.vue","../../../../src/uni_modules/wot-design-uni/components/wd-textarea/types.ts","../../../../src/uni_modules/wot-design-uni/components/wd-textarea/wd-textarea.vue"],"sourcesContent":["<template>\n  <view :class=\"['wd-cell-group', border ? 'is-border' : '', customClass]\" :style=\"customStyle\">\n    <view v-if=\"title || value || useSlot\" class=\"wd-cell-group__title\">\n      <!--左侧标题-->\n      <view class=\"wd-cell-group__left\">\n        <text v-if=\"!$slots.title\">{{ title }}</text>\n        <slot v-else name=\"title\"></slot>\n      </view>\n      <!--右侧标题-->\n      <view class=\"wd-cell-group__right\">\n        <text v-if=\"!$slots.value\">{{ value }}</text>\n        <slot v-else name=\"value\"></slot>\n      </view>\n    </view>\n    <view class=\"wd-cell-group__body\">\n      <slot></slot>\n    </view>\n  </view>\n</template>\n\n<script lang=\"ts\">\nexport default {\n  name: 'wd-cell-group',\n  options: {\n    addGlobalClass: true,\n    virtualHost: true,\n    styleIsolation: 'shared'\n  }\n}\n</script>\n\n<script lang=\"ts\" setup>\nimport { useChildren } from '../composables/useChildren'\nimport { CELL_GROUP_KEY, cellGroupProps } from './types'\n\nconst props = defineProps(cellGroupProps)\n\nconst { linkChildren } = useChildren(CELL_GROUP_KEY)\n\nlinkChildren({ props })\n</script>\n\n<style lang=\"scss\" scoped>\n@import './index.scss';\n</style>\n","import type { ExtractPropTypes, PropType } from 'vue'\nimport { baseProps, makeArrayProp, makeBooleanProp, makeNumberProp, makeNumericProp, makeStringProp } from '../common/props'\nimport type { FormItemRule } from '../wd-form/types'\nimport type { InputClearTrigger, InputMode } from '../wd-input/types'\n\nexport type ConfirmType = 'send' | 'search' | 'next' | 'go' | 'done'\n\nexport const textareaProps = {\n  ...baseProps,\n  /**\n   * * 自定义文本域容器class名称。\n   * 类型：string\n   */\n  customTextareaContainerClass: makeStringProp(''),\n\n  /**\n   * * 自定义文本域class名称。\n   * 类型：string\n   */\n  customTextareaClass: makeStringProp(''),\n\n  /**\n   * * 自定义标签class名称。\n   * 类型：string\n   */\n  customLabelClass: makeStringProp(''),\n  // 原生属性\n  /**\n   * * 绑定值。\n   * 类型：string | number\n   */\n  modelValue: makeNumericProp(''),\n\n  /**\n   * * 占位文本。\n   * 类型：string\n   * 默认值：'请输入...'\n   */\n  placeholder: String,\n\n  /**\n   * 指定placeholder的样式。\n   * 类型：string\n   */\n  placeholderStyle: String,\n\n  /**\n   * * 指定placeholder的样式类。\n   * 类型：string\n   * 默认值：空字符串\n   */\n  placeholderClass: makeStringProp(''),\n\n  /**\n   * * 禁用输入框。\n   * 类型：boolean\n   * 默认值：false\n   */\n  disabled: makeBooleanProp(false),\n\n  /**\n   * * 最大输入长度，设置为-1表示不限制最大长度。\n   * 类型：number\n   * 默认值：-1\n   */\n  maxlength: makeNumberProp(-1),\n\n  /**\n   * * 自动聚焦并拉起键盘。\n   * 类型：boolean\n   * 默认值：false\n   */\n  autoFocus: makeBooleanProp(false),\n\n  /**\n   * * 获取焦点。\n   * 类型：boolean\n   * 默认值：false\n   */\n  focus: makeBooleanProp(false),\n\n  /**\n   * * 是否自动增高输入框高度，style.height属性在auto-height生效时不生效。\n   * 类型：boolean\n   * 默认值：false\n   */\n  autoHeight: makeBooleanProp(false),\n\n  /**\n   * * 如果textarea处于position:fixed区域，需要设置此属性为true。\n   * 类型：boolean\n   * 默认值：false\n   */\n  fixed: makeBooleanProp(false),\n\n  /**\n   * * 指定光标与键盘的距离，取textarea距离底部的距离和cursor-spacing指定的距离的最小值作为实际距离。\n   * 类型：number\n   * 默认值：0\n   */\n  cursorSpacing: makeNumberProp(0),\n\n  /**\n   * * 指定focus时的光标位置。\n   * 类型：number\n   * 默认值：-1\n   */\n  cursor: makeNumberProp(-1),\n\n  /**\n   * * 设置键盘右下角按钮的文字。\n   * 类型：string\n   * 默认值：'done'\n   * 可选值有'done', 'go', 'next', 'search', 'send'\n   */\n  confirmType: String as PropType<ConfirmType>,\n\n  /**\n   * * 点击键盘右下角按钮时是否保持键盘不收起。\n   * 类型：boolean\n   * 默认值：false\n   */\n  confirmHold: makeBooleanProp(false),\n\n  /**\n   * * 是否显示键盘上方带有“完成”按钮那一栏。\n   * 类型：boolean\n   * 默认值：true\n   */\n  showConfirmBar: makeBooleanProp(true),\n\n  /**\n   * * 光标起始位置，自动聚集时有效，需与selection-end搭配使用。\n   * 类型：number\n   * 默认值：-1\n   */\n  selectionStart: makeNumberProp(-1),\n\n  /**\n   * * 光标结束位置，自动聚集时有效，需与selection-start搭配使用。\n   * 类型：number\n   * 默认值：-1\n   */\n  selectionEnd: makeNumberProp(-1),\n\n  /**\n   * * 键盘弹起时是否自动上推页面。\n   * 类型：boolean\n   * 默认值：true\n   */\n  adjustPosition: makeBooleanProp(true),\n\n  /**\n   * * 是否去掉iOS下的默认内边距。\n   * 类型：boolean\n   * 默认值：false\n   */\n  disableDefaultPadding: makeBooleanProp(false),\n\n  /**\n   * * focus状态下点击页面时是否不收起键盘。\n   * 类型：boolean\n   * 默认值：false\n   */\n  holdKeyboard: makeBooleanProp(false),\n\n  // 非原生属性\n  /**\n   * * 显示为密码框。\n   * 类型：boolean\n   * 默认值：false\n   */\n  showPassword: makeBooleanProp(false),\n\n  /**\n   * * 是否显示清空按钮。\n   * 类型：boolean\n   * 默认值：false\n   */\n  clearable: makeBooleanProp(false),\n\n  /**\n   * * 输入框只读状态。\n   * 类型：boolean\n   * 默认值：false\n   */\n  readonly: makeBooleanProp(false),\n\n  /**\n   * * 前置图标，icon组件中的图标类名。\n   * 类型：string\n   */\n  prefixIcon: String,\n  /**\n   * * 是否显示字数限制，需要同时设置maxlength。\n   * 类型：boolean\n   * 默认值：false\n   */\n  showWordLimit: makeBooleanProp(false),\n  /**\n   * 设置左侧标题。\n   * 类型：string\n   */\n  label: String,\n\n  /**\n   * 设置左侧标题宽度。\n   * 类型：string\n   */\n  labelWidth: makeStringProp(''),\n  /**\n   * * 设置输入框大小。\n   * 类型：string\n   */\n  size: String,\n\n  /**\n   * * 设置输入框错误状态（红色）。\n   * 类型：boolean\n   * 默认值：false\n   */\n  error: makeBooleanProp(false),\n\n  /**\n   * * 当存在label属性时，设置标题和输入框垂直居中，默认为顶部居中。\n   * 类型：boolean\n   * 默认值：false\n   */\n  center: makeBooleanProp(false),\n\n  /**\n   * * 非cell类型下是否隐藏下划线。\n   * 类型：boolean\n   * 默认值：false\n   */\n  noBorder: makeBooleanProp(false),\n\n  /**\n   * * cell类型下必填样式。\n   * 类型：boolean\n   * 默认值：false\n   */\n  required: makeBooleanProp(false),\n\n  /**\n   * * 表单域model字段名，在使用表单校验功能的情况下，该属性是必填的。\n   * 类型：string\n   */\n  prop: makeStringProp(''),\n\n  /**\n   * * 表单验证规则。\n   * 类型：FormItemRule[]\n   * 默认值：[]\n   */\n  rules: makeArrayProp<FormItemRule>(),\n  /**\n   * 显示清除图标的时机，always 表示输入框不为空时展示，focus 表示输入框聚焦且不为空时展示\n   * 类型: \"focus\" | \"always\"\n   * 默认值: \"always\"\n   */\n  clearTrigger: makeStringProp<InputClearTrigger>('always'),\n  /**\n   * 是否在点击清除按钮时聚焦输入框\n   * 类型: boolean\n   * 默认值: true\n   */\n  focusWhenClear: makeBooleanProp(true),\n  /**\n   * 是否忽略组件内对文本合成系统事件的处理。为 false 时将触发 compositionstart、compositionend、compositionupdate 事件，且在文本合成期间会触发 input 事件\n   * 类型: boolean\n   * 默认值: true\n   */\n  ignoreCompositionEvent: makeBooleanProp(true),\n  /**\n   * 它提供了用户在编辑元素或其内容时可能输入的数据类型的提示。在符合条件的高版本webview里，uni-app的web和app-vue平台中可使用本属性。\n   * 类型: InputMode\n   * 可选值: \"none\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | \"search\" | \"password\"\n   * 默认值: \"text\"\n   */\n  inputmode: makeStringProp<InputMode>('text')\n}\n\nexport type TextareaProps = ExtractPropTypes<typeof textareaProps>\n","<template>\n  <view :class=\"rootClass\" :style=\"customStyle\">\n    <view v-if=\"label || $slots.label\" :class=\"labelClass\" :style=\"labelStyle\">\n      <view v-if=\"prefixIcon || $slots.prefix\" class=\"wd-textarea__prefix\">\n        <wd-icon v-if=\"prefixIcon && !$slots.prefix\" custom-class=\"wd-textarea__icon\" :name=\"prefixIcon\" @click=\"onClickPrefixIcon\" />\n        <slot v-else name=\"prefix\"></slot>\n      </view>\n      <view class=\"wd-textarea__label-inner\">\n        <text v-if=\"label && !$slots.label\">{{ label }}</text>\n        <slot v-else name=\"label\"></slot>\n      </view>\n    </view>\n\n    <!-- 文本域 -->\n    <view :class=\"`wd-textarea__value ${showClear ? 'is-suffix' : ''} ${customTextareaContainerClass} ${showWordCount ? 'is-show-limit' : ''}`\">\n      <textarea\n        :class=\"`wd-textarea__inner ${customTextareaClass}`\"\n        v-model=\"inputValue\"\n        :show-count=\"false\"\n        :placeholder=\"placeholderValue\"\n        :disabled=\"disabled || readonly\"\n        :maxlength=\"maxlength\"\n        :focus=\"focused\"\n        :auto-focus=\"autoFocus\"\n        :placeholder-style=\"placeholderStyle\"\n        :placeholder-class=\"inputPlaceholderClass\"\n        :auto-height=\"autoHeight\"\n        :cursor-spacing=\"cursorSpacing\"\n        :fixed=\"fixed\"\n        :cursor=\"cursor\"\n        :show-confirm-bar=\"showConfirmBar\"\n        :selection-start=\"selectionStart\"\n        :selection-end=\"selectionEnd\"\n        :adjust-position=\"adjustPosition\"\n        :hold-keyboard=\"holdKeyboard\"\n        :confirm-type=\"confirmType\"\n        :confirm-hold=\"confirmHold\"\n        :disable-default-padding=\"disableDefaultPadding\"\n        :ignoreCompositionEvent=\"ignoreCompositionEvent\"\n        :inputmode=\"inputmode\"\n        @input=\"handleInput\"\n        @focus=\"handleFocus\"\n        @blur=\"handleBlur\"\n        @confirm=\"handleConfirm\"\n        @linechange=\"handleLineChange\"\n        @keyboardheightchange=\"handleKeyboardheightchange\"\n      />\n      <view v-if=\"errorMessage\" class=\"wd-textarea__error-message\">{{ errorMessage }}</view>\n\n      <view v-if=\"props.readonly\" class=\"wd-textarea__readonly-mask\" />\n      <view class=\"wd-textarea__suffix\">\n        <wd-icon v-if=\"showClear\" custom-class=\"wd-textarea__clear\" name=\"error-fill\" @click=\"handleClear\" />\n        <view v-if=\"showWordCount\" class=\"wd-textarea__count\">\n          <text :class=\"countClass\">\n            {{ currentLength }}\n          </text>\n          /{{ maxlength }}\n        </view>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script lang=\"ts\">\nexport default {\n  name: 'wd-textarea',\n  options: {\n    virtualHost: true,\n    addGlobalClass: true,\n    styleIsolation: 'shared'\n  }\n}\n</script>\n\n<script lang=\"ts\" setup>\nimport { computed, onBeforeMount, ref, watch, useSlots, type Slots } from 'vue'\nimport wdIcon from '../wd-icon/wd-icon.vue'\nimport { objToStyle, isDef, pause } from '../common/util'\nimport { useCell } from '../composables/useCell'\nimport { FORM_KEY, type FormItemRule } from '../wd-form/types'\nimport { useParent } from '../composables/useParent'\nimport { useTranslate } from '../composables/useTranslate'\nimport { textareaProps } from './types'\n\ninterface TextareaSlots extends Slots {\n  prefix?: () => any\n  label?: () => any\n}\n\nconst { translate } = useTranslate('textarea')\n\nconst props = defineProps(textareaProps)\nconst emit = defineEmits([\n  'update:modelValue',\n  'clear',\n  'blur',\n  'focus',\n  'input',\n  'keyboardheightchange',\n  'confirm',\n  'linechange',\n  'clickprefixicon',\n  'click'\n])\nconst slots = useSlots() as TextareaSlots\n\nconst placeholderValue = computed(() => {\n  return isDef(props.placeholder) ? props.placeholder : translate('placeholder')\n})\n\nconst clearing = ref<boolean>(false)\nconst focused = ref<boolean>(false) // 控制聚焦\nconst focusing = ref<boolean>(false) // 当前是否激活状态\nconst inputValue = ref<string>('') // 输入框的值\nconst cell = useCell()\n\nwatch(\n  () => props.focus,\n  (newValue) => {\n    focused.value = newValue\n  },\n  { immediate: true, deep: true }\n)\n\nwatch(\n  () => props.modelValue,\n  (newValue) => {\n    inputValue.value = isDef(newValue) ? String(newValue) : ''\n  },\n  { immediate: true, deep: true }\n)\n\nconst { parent: form } = useParent(FORM_KEY)\n\n/**\n * 展示清空按钮\n */\nconst showClear = computed(() => {\n  const { disabled, readonly, clearable, clearTrigger } = props\n  if (clearable && !readonly && !disabled && inputValue.value && (clearTrigger === 'always' || (props.clearTrigger === 'focus' && focusing.value))) {\n    return true\n  } else {\n    return false\n  }\n})\n\n/**\n * 展示字数统计\n */\nconst showWordCount = computed(() => {\n  const { disabled, readonly, maxlength, showWordLimit } = props\n  return Boolean(!disabled && !readonly && isDef(maxlength) && maxlength > -1 && showWordLimit)\n})\n\n// 表单校验错误信息\nconst errorMessage = computed(() => {\n  if (form && props.prop && form.errorMessages && form.errorMessages[props.prop]) {\n    return form.errorMessages[props.prop]\n  } else {\n    return ''\n  }\n})\n\n// 是否展示必填\nconst isRequired = computed(() => {\n  let formRequired = false\n  if (form && form.props.rules) {\n    const rules = form.props.rules\n    for (const key in rules) {\n      if (Object.prototype.hasOwnProperty.call(rules, key) && key === props.prop && Array.isArray(rules[key])) {\n        formRequired = rules[key].some((rule: FormItemRule) => rule.required)\n      }\n    }\n  }\n  return props.required || props.rules.some((rule) => rule.required) || formRequired\n})\n\n// 当前文本域文字长度\nconst currentLength = computed(() => {\n  /**\n   * 使用Array.from处理多码元字符以获取正确的长度\n   * @link https://github.com/Moonofweisheng/wot-design-uni/issues/933\n   */\n  return Array.from(String(formatValue(props.modelValue))).length\n})\n\nconst rootClass = computed(() => {\n  return `wd-textarea   ${props.label || slots.label ? 'is-cell' : ''} ${props.center ? 'is-center' : ''} ${cell.border.value ? 'is-border' : ''} ${\n    props.size ? 'is-' + props.size : ''\n  } ${props.error ? 'is-error' : ''} ${props.disabled ? 'is-disabled' : ''} ${props.autoHeight ? 'is-auto-height' : ''} ${\n    currentLength.value > 0 ? 'is-not-empty' : ''\n  }  ${props.noBorder ? 'is-no-border' : ''} ${props.customClass}`\n})\n\nconst labelClass = computed(() => {\n  return `wd-textarea__label ${props.customLabelClass} ${isRequired.value ? 'is-required' : ''}`\n})\n\nconst inputPlaceholderClass = computed(() => {\n  return `wd-textarea__placeholder  ${props.placeholderClass}`\n})\n\nconst countClass = computed(() => {\n  return `${currentLength.value > 0 ? 'wd-textarea__count-current' : ''} ${currentLength.value > props.maxlength ? 'is-error' : ''}`\n})\n\nconst labelStyle = computed(() => {\n  return props.labelWidth\n    ? objToStyle({\n        'min-width': props.labelWidth,\n        'max-width': props.labelWidth\n      })\n    : ''\n})\n\nonBeforeMount(() => {\n  initState()\n})\n\n// 状态初始化\nfunction initState() {\n  inputValue.value = formatValue(inputValue.value)\n  emit('update:modelValue', inputValue.value)\n}\n\nfunction formatValue(value: string | number) {\n  if (value === null || value === undefined) return ''\n  const { maxlength, showWordLimit } = props\n  if (showWordLimit && maxlength !== -1 && String(value).length > maxlength) {\n    return value.toString().substring(0, maxlength)\n  }\n  return `${value}`\n}\n\nasync function handleClear() {\n  focusing.value = false\n  inputValue.value = ''\n  if (props.focusWhenClear) {\n    clearing.value = true\n    focused.value = false\n  }\n  await pause()\n  if (props.focusWhenClear) {\n    focused.value = true\n    focusing.value = true\n  }\n  emit('update:modelValue', inputValue.value)\n  emit('clear')\n}\nasync function handleBlur({ detail }: any) {\n  // 等待150毫秒，clear执行完毕\n  await pause(150)\n\n  if (clearing.value) {\n    clearing.value = false\n    return\n  }\n\n  focusing.value = false\n  emit('blur', {\n    value: inputValue.value,\n    cursor: detail.cursor ? detail.cursor : null\n  })\n}\nfunction handleFocus({ detail }: any) {\n  focusing.value = true\n  emit('focus', detail)\n}\nfunction handleInput({ detail }: any) {\n  inputValue.value = formatValue(inputValue.value as string)\n  emit('update:modelValue', inputValue.value)\n  emit('input', detail)\n}\nfunction handleKeyboardheightchange({ detail }: any) {\n  emit('keyboardheightchange', detail)\n}\nfunction handleConfirm({ detail }: any) {\n  emit('confirm', detail)\n}\nfunction handleLineChange({ detail }: any) {\n  emit('linechange', detail)\n}\nfunction onClickPrefixIcon() {\n  emit('clickprefixicon')\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import './index.scss';\n</style>\n\n<style lang=\"scss\" scoped>\n@import './placeholder.scss';\n</style>\n"],"names":["name","options","addGlobalClass","virtualHost","styleIsolation","props","__props","linkChildren","useChildren","CELL_GROUP_KEY","textareaProps","__spreadProps","baseProps","customTextareaContainerClass","makeStringProp","customTextareaClass","customLabelClass","modelValue","makeNumericProp","placeholder","String","placeholderStyle","placeholderClass","disabled","makeBooleanProp","maxlength","makeNumberProp","autoFocus","focus","autoHeight","fixed","cursorSpacing","cursor","confirmType","confirmHold","showConfirmBar","selectionStart","selectionEnd","adjustPosition","disableDefaultPadding","holdKeyboard","showPassword","clearable","readonly","prefixIcon","showWordLimit","label","labelWidth","size","error","center","noBorder","required","prop","rules","makeArrayProp","clearTrigger","focusWhenClear","ignoreCompositionEvent","inputmode","translate","useTranslate","emit","__emit","slots","useSlots","placeholderValue","computed","isDef","clearing","ref","focused","focusing","inputValue","cell","useCell","watch","newValue","value","immediate","deep","parent","form","useParent","FORM_KEY","showClear","showWordCount","Boolean","errorMessage","errorMessages","isRequired","formRequired","key","Object","prototype","hasOwnProperty","call","Array","isArray","some","rule","currentLength","from","formatValue","length","rootClass","border","customClass","labelClass","inputPlaceholderClass","countClass","labelStyle","objToStyle","toString","substring","handleClear","__async","this","pause","handleBlur","_0","arguments","detail","handleFocus","handleInput","handleKeyboardheightchange","handleConfirm","handleLineChange","onClickPrefixIcon","onBeforeMount"],"mappings":"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"}